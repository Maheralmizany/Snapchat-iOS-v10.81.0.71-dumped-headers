//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SCGrapheneMetricId.h"

@interface SCGrapheneMemoriesMetrics : SCGrapheneMetricId
{
}

+ (id)sendTaskFinish;
+ (id)galleryPrivateForgetPasscode;
+ (id)galleryPrivateChangePasscode;
+ (id)galleryPrivateFinishSetup;
+ (id)gallerySksRetrieveKey;
+ (id)regenerateSqlcipher;
+ (id)meoUnlock;
+ (id)galleryExportLowDiskSpace;
+ (id)galleryExportStartStories;
+ (id)galleryExportStartSnaps;
+ (id)galleryExportComplete;
+ (id)browseCacheHitRate;
+ (id)memoriesCanStream;
+ (id)backgroundPrefetch;
+ (id)galleryEnd2endDownload;
+ (id)redirectDownload;
+ (id)fetchCollections;
+ (id)operaFailToPresent;
+ (id)expiredUserDataPurged;
+ (id)userDataStatusAtLogin;
+ (id)galleryInvalidAddSnaps;
+ (id)coreDataObjectError;
+ (id)coreDataDbOpen;
+ (id)gallerySqlcipherKeyLatency;
+ (id)cameraRollFetchEmpty;
+ (id)gallerySearchQueryPerformance;
+ (id)cameraSaveFullComplete;
+ (id)cameraSaveTranscodeDone;
+ (id)cameraSaveStart;
+ (id)gallerySaveToCameraroll;
+ (id)gallerySaveToMemories;
+ (id)savingDuplicateSnap;
+ (id)savingLowDiskStorageError;
+ (id)gallerySavingStart;
+ (id)backupNetworkError;
+ (id)gallerySnapUpload;
+ (id)backgroundUploadFinished;
+ (id)backgroundUploadScheduled;
+ (id)backupSkipOperations;
+ (id)dataRecoveryProcessed;
+ (id)uploadResult;
+ (id)galleryAbandonDanglingSnap;
+ (id)galleryDiskCacheCloudfs;
+ (id)galleryDiskCacheEntityCount;
+ (id)galleryDiskCacheHighLevel;
+ (id)galleryDiskCacheLevel0;
+ (id)galleryDiskCacheUsage;
+ (id)galleryDiskCacheLimit;
+ (id)backupTotalOperation;
+ (id)backupLocalOperation;
+ (id)galleryInitialStateBlocking;
+ (id)galleryInitialStatePending;
+ (id)galleryInitialStateDeleted;
+ (id)galleryInitialStateFailed;
+ (id)galleryInitialStatePrivate;
+ (id)galleryInitialStateTotal;
+ (id)galleryStoryCreateCancel;
+ (id)snapsTabSnapsPerCluster;
+ (id)snapsTabClusterFinish;
+ (id)prepareSnapsLatency;
+ (id)contentLoadLatency;
+ (id)all;

@end

