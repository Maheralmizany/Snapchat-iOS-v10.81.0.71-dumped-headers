//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "SCImageProcessLensCommandListener-Protocol.h"
#import "SCLensDataProviderListener-Protocol.h"
#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"

@class NSArray, NSMutableDictionary, NSString, SCExperimentManager, SCGrowingButton, SCLens, SCLensDownloadableContent, SCLensInPreviewCollectionView, SCLensInPreviewUsageNotifier, SCLensInPreviewView, SCLensUIUpdateListenerAnnouncer, SCLoadingIndicatorView, SCPromise, UIImage, UIView;
@protocol SCDownloadableContentManaging, SCLensCameraScreenDataProviderProtocol, SCLensIconInMemoryCache, SCLensLogger, SCLensPreviewViewControllerDelegate, SCLensUsageTrackerProtocol, SCLensUserProvider;

@interface SCLensInPreviewViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource, SCLensDataProviderListener, SCImageProcessLensCommandListener>
{
    UIView *_sourceView;
    UIView *_parentView;
    id <SCLensLogger> _lensLogger;
    SCLensDownloadableContent *_lensDownloadableContent;
    SCLensInPreviewCollectionView *_collectionView;
    SCLoadingIndicatorView *_loadingIndicatorView;
    SCGrowingButton *_revertButton;
    id <SCLensCameraScreenDataProviderProtocol> _lensDataProvider;
    NSString *_lensDataProviderToken;
    NSArray *_lenses;
    SCLens *_activeLens;
    SCLens *_originalSelectedLens;
    long long _faceCount;
    _Bool _isSnap3D;
    SCLensUIUpdateListenerAnnouncer *_uiUpdateAnnouncer;
    NSMutableDictionary *_visibleLenses;
    _Bool _lensDidApply;
    SCPromise *_firstLensActivationPromise;
    SCPromise *_fetchedLensActivationPromise;
    NSString *_applicableContext;
    id <SCLensUsageTrackerProtocol> _lensUsageTracker;
    SCLensInPreviewUsageNotifier *_lensUsageNotifier;
    id <SCLensUserProvider> _lensUserProvider;
    unsigned long long _mediaType;
    SCExperimentManager *_experimentManager;
    id <SCDownloadableContentManaging> _downloadableContentManager;
    id <SCLensIconInMemoryCache> _lensIconInMemoryCache;
    id <SCLensPreviewViewControllerDelegate> _delegate;
    UIImage *_originalSelectedLensImage;
    SCLens *_selectedLens;
}

@property(readonly, nonatomic) __weak SCLens *selectedLens; // @synthesize selectedLens=_selectedLens;
@property(readonly, nonatomic) UIImage *originalSelectedLensImage; // @synthesize originalSelectedLensImage=_originalSelectedLensImage;
@property(nonatomic) __weak id <SCLensPreviewViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)imageProcessLensCommand:(id)arg1 didApplyLens:(id)arg2 applyDelay:(double)arg3;
- (void)imageProcessLensCommand:(id)arg1 didRecognizeFaces:(unsigned long long)arg2;
- (void)imageProcessLensCommand:(id)arg1 didRecognizeExpression:(id)arg2;
- (void)imageProcessLensCommand:(id)arg1 didFinishProcessingFrameWithLens:(id)arg2;
- (void)imageProcessLensCommand:(id)arg1 willStartProcessingFrameWithLens:(id)arg2;
- (void)imageProcessLensCommand:(id)arg1 didUnloadCommandWithLens:(id)arg2 processingTime:(double)arg3;
- (void)imageProcessLensCommand:(id)arg1 willUnloadWithLensComponentManager:(id)arg2;
- (void)imageProcessLensCommand:(id)arg1 willLoadWithLensComponentManager:(id)arg2;
- (id)_cellAtIndex:(long long)arg1;
- (id)_safeLensWithId:(id)arg1;
- (void)lensDataProvider:(id)arg1 didUpdateLens:(id)arg2 contentUpdateType:(long long)arg3;
- (void)lensDataProvider:(id)arg1 didUpdateAllLenses:(id)arg2 requiresAnimation:(_Bool)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (void)updateAppearanceOfAllVisibleCellsWithAnimation:(_Bool)arg1;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)_deselectLensAtIndexPath:(id)arg1;
- (id)_lensForLensId:(id)arg1;
- (id)_configurationForLens:(id)arg1;
- (void)_resetLensAppliedImage;
- (void)_configureCell:(id)arg1 forIndexPath:(id)arg2;
- (void)_notifyLensSelected:(id)arg1 index:(unsigned long long)arg2;
- (void)_activateLens:(id)arg1 index:(unsigned long long)arg2;
- (void)_reloadData;
- (id)lensWithIndex:(long long)arg1;
- (_Bool)_hasUnavailableLens;
- (_Bool)_isSelectedLens:(id)arg1;
- (_Bool)_isAnyLensSelected;
- (unsigned long long)_indexOfUnavailableLens;
- (void)_updateContentBasedOnFaceCount;
- (void)setFaceCount:(long long)arg1;
- (_Bool)_isReady;
- (void)activateLens:(id)arg1;
- (void)activateFirstLens;
- (void)dismiss;
- (void)presentFromViewController:(id)arg1 parentView:(id)arg2 sourceView:(id)arg3 bottomView:(id)arg4;
- (void)_revertTapped:(id)arg1;
- (void)_hideRevertButton;
- (void)_showRevertButton;
- (void)_hideLoadingIndicatorView;
- (void)_showLoadingIndicatorView;
- (void)_setUpCollectionView;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)_setDataProvider:(id)arg1;
- (id)initWithDataProviderFuture:(id)arg1 dataFetcher:(id)arg2 downloadableContent:(id)arg3 logger:(id)arg4 faceCount:(long long)arg5 mediaType:(unsigned long long)arg6 isSnap3D:(_Bool)arg7 activeLens:(id)arg8 originalSelectedLens:(id)arg9 originalSelectedLensImage:(id)arg10 applicableContext:(id)arg11 lensUsageTracker:(id)arg12 lensUsageNotifier:(id)arg13 lensUserProvider:(id)arg14 experimentManager:(id)arg15 downloadableContentManager:(id)arg16 lensIconInMemoryCache:(id)arg17;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) SCLensInPreviewView *view; // @dynamic view;

@end

