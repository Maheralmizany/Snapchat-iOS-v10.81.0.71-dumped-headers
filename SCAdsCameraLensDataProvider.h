//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCLensCameraScreenDataProviderProtocol-Protocol.h"
#import "SCLensDataFetchingMediatorDelegate-Protocol.h"
#import "SCTraceEnabled-Protocol.h"

@class NSArray, NSString, SCLens, SCLensDataFetchingMediator, SCLensDataProviderListenerAnnouncer;
@protocol SCLensUIUpdateListener;

@interface SCAdsCameraLensDataProvider : NSObject <SCTraceEnabled, SCLensDataFetchingMediatorDelegate, SCLensCameraScreenDataProviderProtocol>
{
    NSArray *_categoryIds;
    NSArray *_unlockedLenses;
    SCLensDataProviderListenerAnnouncer *_announcer;
    SCLensDataFetchingMediator *_dataFetchingMediator;
    SCLens *_selectedLens;
    _Bool _showBirthdayReplyLens;
}

@property(nonatomic) _Bool showBirthdayReplyLens; // @synthesize showBirthdayReplyLens=_showBirthdayReplyLens;
- (void).cxx_destruct;
- (void)updateLenses;
- (void)setCategoryIds:(id)arg1;
- (void)lensDataFetchingMediatorUpdateLenses:(id)arg1;
- (void)lensDataFetchingMediatorDidStopUpdatingLensData:(id)arg1;
- (void)lensDataFetchingMediatorDidStartUpdatingLensData:(id)arg1;
- (void)lensDataFetchingMediator:(id)arg1 didUpdateContentForLens:(id)arg2 contentUpdateType:(long long)arg3;
- (void)stopUpdatingLensDataWithToken:(id)arg1;
- (id)startUpdatingLensData;
- (_Bool)isFetchingLens:(id)arg1;
- (void)resumeDownloads;
- (void)pauseDownloads;
- (void)fetchLenses:(id)arg1 requestTiming:(long long)arg2;
- (void)fetchLenses:(id)arg1;
- (void)fetchAsset:(id)arg1 lens:(id)arg2 completionPerformer:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)clearCacheWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)cancelDownloads;
@property(readonly, nonatomic) id <SCLensUIUpdateListener> lensUIStateListener;
- (void)fetchLensesIfNeeded;
- (void)fetchLens:(id)arg1;
- (void)setSelectedLens:(id)arg1;
- (id)selectedLens;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (id)lensToPreselect;
- (id)firstApplicableLens;
- (id)originalLens;
- (_Bool)isRegressorNeeded;
- (id)applicableContext;
- (void)setCategoryIds:(id)arg1 devicePosition:(long long)arg2 applicableContext:(id)arg3;
- (void)setCategoryIds:(id)arg1 devicePosition:(long long)arg2;
- (void)setDevicePosition:(long long)arg1;
- (id)categoryIds;
- (void)updateDownloadableData;
- (id)lensForId:(id)arg1;
- (void)clearLenses;
- (void)updateLenses:(id)arg1;
- (id)lenses;
- (void)warmUp;
- (id)initWithLensDataFetcher:(id)arg1 lensDataPrefetcher:(id)arg2 lensThumbnailLogger:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

