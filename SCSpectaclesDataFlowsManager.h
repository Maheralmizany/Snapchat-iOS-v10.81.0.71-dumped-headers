//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCSpectaclesDeviceEventListener-Protocol.h"
#import "SCSpectaclesDeviceStoreDelegate-Protocol.h"
#import "SCSpectaclesNetworkClientDelegate-Protocol.h"
#import "SCSpectaclesTaskManagerDelegate-Protocol.h"

@class NSDate, NSString, SCQueuePerformer, SCSpectaclesCache, SCSpectaclesDataFlowsManagerIdleWatch, SCSpectaclesDevice, SCSpectaclesDeviceStore, SCSpectaclesEventListenerAnnouncer, SCSpectaclesMutableTransferSession, SCSpectaclesSensorStore, SCSpectaclesTaskManager, SCWeakTimer;
@protocol SCSpectaclesDataFlowsRequest, SCSpectaclesLibraryLogger, SCSpectaclesNetworkClient, SCSpectaclesTweaksConfigProvider;

@interface SCSpectaclesDataFlowsManager : NSObject <SCSpectaclesNetworkClientDelegate, SCSpectaclesDeviceEventListener, SCSpectaclesTaskManagerDelegate, SCSpectaclesDeviceStoreDelegate>
{
    SCSpectaclesCache *_cache;
    SCSpectaclesDeviceStore *_deviceStore;
    SCSpectaclesDevice *_selectedWifiDevice;
    NSString *_selectedWifiDeviceSsidPassword;
    SCSpectaclesDevice *_previousDevice;
    long long _selectedDeviceSaveLocation;
    id <SCSpectaclesNetworkClient> _bluetoothClient;
    long long _wifiRestartCount;
    SCWeakTimer *_connectionWatchdogTimer;
    SCSpectaclesEventListenerAnnouncer *_announcer;
    SCSpectaclesDataFlowsManagerIdleWatch *_idleWatch;
    id <SCSpectaclesLibraryLogger> _analyticsLogger;
    SCSpectaclesSensorStore *_sensorStore;
    NSDate *_connectionAttemptStartDate;
    unsigned long long _currentContext;
    unsigned long long _recordingDuringWifiCount;
    _Bool _enteredSpecsTabDuringTransfer;
    id <SCSpectaclesTweaksConfigProvider> _tweaksConfigProvider;
    id <SCSpectaclesDataFlowsRequest> _dataFlowRequest;
    _Bool _isBTCAutomaticTransferPending;
    unsigned long long _attemptToStartBTCAutomaticTransferCount;
    unsigned long long _state;
    NSString *_countryCode;
    SCSpectaclesDevice *_selectedDevice;
    SCSpectaclesMutableTransferSession *_transferSession;
    SCSpectaclesTaskManager *_taskManager;
    SCQueuePerformer *_performer;
    id <SCSpectaclesNetworkClient> _wifiClient;
}

+ (long long)_reasonForConnectionForTask:(id)arg1;
@property(retain, nonatomic) id <SCSpectaclesNetworkClient> wifiClient; // @synthesize wifiClient=_wifiClient;
@property(readonly, nonatomic) SCQueuePerformer *performer; // @synthesize performer=_performer;
@property(readonly, nonatomic) SCSpectaclesTaskManager *taskManager; // @synthesize taskManager=_taskManager;
@property(retain) SCSpectaclesMutableTransferSession *transferSession; // @synthesize transferSession=_transferSession;
@property(retain, nonatomic) SCSpectaclesDevice *selectedDevice; // @synthesize selectedDevice=_selectedDevice;
@property(copy, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(readonly, nonatomic) unsigned long long state; // @synthesize state=_state;
- (void).cxx_destruct;
- (id)_specsConnectionInfo:(long long)arg1;
- (id)_specsConnectionInfo;
- (void)_logConnectionFailure:(unsigned long long)arg1;
- (void)_logConnectionOpen;
- (void)_logConnectionStart;
- (void)_logTransferInterruptWithReason:(unsigned long long)arg1;
- (void)_logTransferFinished;
- (void)networkClientDidTimeOut:(id)arg1;
- (void)networkClientDidBecomeActive:(id)arg1;
- (void)networkClientDidCompleteRequest:(id)arg1;
- (void)networkClient:(id)arg1 didReceiveNetworkResponse:(id)arg2;
- (void)networkClient:(id)arg1 didError:(id)arg2;
- (void)deviceStoreDidClearDevices;
- (void)deviceStore:(id)arg1 didAddDevice:(id)arg2;
- (void)_disconnectWiFi:(id)arg1;
- (void)_disconnectBT:(id)arg1;
- (void)_updateDeviceManagerForDeviceUpdate:(id)arg1;
- (void)device:(id)arg1 didMarkCorruptContent:(id)arg2;
- (void)deviceDidStartRecording:(id)arg1;
- (void)deviceDidUpdateTaskQueue:(id)arg1;
- (void)device:(id)arg1 didUpdateInfo:(unsigned long long)arg2;
- (void)deviceDidUpdateState:(id)arg1;
- (void)spectaclesTransferSession:(id)arg1 onTransferUpdate:(unsigned long long)arg2;
- (void)taskManager:(id)arg1 didDownloadContent:(id)arg2 component:(unsigned long long)arg3;
- (void)taskManagerHandledResponse:(id)arg1;
- (void)taskManager:(id)arg1 sawError:(id)arg2;
- (void)taskManagerComplete:(id)arg1;
- (void)taskManager:(id)arg1 sendNetworkRequest:(id)arg2 withDelay:(double)arg3;
- (void)_endTransferSession;
- (void)_createTransferSession:(id)arg1;
- (void)_deviceSessionDidEnd;
- (long long)_reasonForConnection;
- (void)_stopBluetoothClient;
- (void)_stopClients;
- (void)_restartWifiClientWasAbleToConnectPreviously:(_Bool)arg1;
- (void)_startWifiClient;
- (void)_ensureNetworkClientConnected;
- (void)_cancelEnsureTaskManagerConnected;
- (void)_startEnsureTaskManagerConnected;
- (void)_startBluetoothClient;
- (id)_networkClient;
- (void)_handleNetworkConnectionOpen;
- (void)_transitionToState:(unsigned long long)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)_selectDeviceForDownload;
- (_Bool)_isDeviceBatteryEnoughForTransfer:(unsigned long long)arg1 isCharging:(_Bool)arg2 isActiveTransfer:(_Bool)arg3;
- (_Bool)_isDeviceBatteryTooLowForSelection:(id)arg1 isForegroundedInSpecsTab:(_Bool)arg2;
- (_Bool)_shouldStopTransferringForDevice:(id)arg1 hasEnteredSpecsTabDuringTransfer:(_Bool)arg2 isHDTransfer:(_Bool)arg3;
- (_Bool)_shouldSelectDevice:(id)arg1;
- (_Bool)_canTransferForDevice:(id)arg1;
- (void)_saveToCameraRollIfNecessary:(id)arg1;
- (_Bool)_canSaveHdVideoToCameraRoll:(id)arg1;
- (_Bool)_canSavePictureToCameraRoll:(id)arg1;
- (void)_applicationDidBecomeActive;
- (_Bool)_isBackgrounded;
- (_Bool)_isInSpecsTab;
- (void)markContentAsCorrupt:(id)arg1;
- (void)markContentAsSynced:(id)arg1;
- (id)currentTransferSession;
- (_Bool)isContentBeingTranferred:(id)arg1 component:(unsigned long long)arg2;
- (_Bool)isContentPartOfCurrentTransferBatch:(id)arg1 component:(unsigned long long)arg2;
- (void)prioritize:(id)arg1 context:(unsigned long long)arg2;
- (void)cancelWifiConnection;
- (void)startBTCForHDFlow:(id)arg1;
- (void)startConnectingWifiForHDFlow:(id)arg1 ssidPassword:(id)arg2 hdContentUUIDs:(id)arg3 useAutomaticTransferMode:(_Bool)arg4;
- (void)dealloc;
- (id)initWithDeviceStore:(id)arg1 announcer:(id)arg2 cache:(id)arg3 analyticsLogger:(id)arg4 tweaksConfigProvider:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

