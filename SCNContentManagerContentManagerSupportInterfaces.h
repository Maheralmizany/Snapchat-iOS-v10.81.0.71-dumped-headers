//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCNContentManagerContentManagerSupportInterfaces-Protocol.h"

@class NSDictionary, NSSet, NSString, SCFeatureSettingsService, SCManagedDatastoreCollector, SCNGrapheneClientMetricsProcessor, SCQueuePerformer;
@protocol SCNContentManagerBlizzardLoggerInterface, SCNContentManagerInterimPayloadProcessor, SCNContentResolutionAttestationHeadersProvider, SCNNetworkManagerNetworkManager, SCNShimsDataProviderFactory;

@interface SCNContentManagerContentManagerSupportInterfaces : NSObject <SCNContentManagerContentManagerSupportInterfaces>
{
    long long _cacheSizeLimitInMB;
    NSDictionary *_cacheManagers;
    NSDictionary *_oldCaches;
    id <SCNContentManagerInterimPayloadProcessor> _payloadProcessor;
    id <SCNNetworkManagerNetworkManager> _networkManager;
    SCNGrapheneClientMetricsProcessor *_clientMetricsProcessor;
    id <SCNShimsDataProviderFactory> _dataProviderFactory;
    NSString *_dbLocation;
    NSSet *_streamingEnabledMediaContextTypeSet;
    SCFeatureSettingsService *_featureSettingsService;
    SCManagedDatastoreCollector *_managedDatastoreCollector;
    SCQueuePerformer *_queuePerformer;
    id <SCNContentManagerBlizzardLoggerInterface> _blizzardLogger;
    NSString *_userId;
    long long _initialChunkSizeInKBForStreaming;
    long long _cacheChunkSizeInKBForStreaming;
    _Bool _shouldLoadCachePolicyFromServer;
    long long _cacheScope;
    NSDictionary *_mediaContextTypeToFirstChunkSizeInKBMap;
    NSDictionary *_mediaContextTypeToCacheChunkSizeInKBMap;
    _Bool _isAggressiveStreamerCancellationEnabled;
    _Bool _useDefaultPriorityInitQueue;
    NSSet *_mediaContextTypesToUseDefaultPriorityInternalQueue;
    NSSet *_mediaContextTypesToUseDefaultPriorityCallbackQueue;
    _Bool _networkMappingProviderUse304;
    long long _networkMappingProviderRefreshIntervalSec;
    NSDictionary *_mediaContextTypeToPrefetchMSForProgDownloadMap;
    id <SCNContentResolutionAttestationHeadersProvider> _attestationHeadersProvider;
    _Bool _shouldResolverEmitContentResolve;
}

- (void).cxx_destruct;
- (_Bool)getShouldResolverEmitContentResolve;
- (id)getAttestationHeadersProvider;
- (id)getMediaContextTypesToPrefetchMSForProgDownloadMap;
- (long long)getNetworkMappingProviderRefreshIntervalSec;
- (_Bool)getNetworkMappingProviderUse304;
- (id)getMediaContextTypesToUseDefaultPriorityCallbackQueue;
- (id)getMediaContextTypesToUseDefaultPriorityInternalQueue;
- (_Bool)getShouldUseDefaultPriorityForInitQueue;
- (_Bool)getIsAggressiveStreamerCancellationEnabled;
- (id)getMediaContextTypeToCacheChunkSizeInKBMap;
- (id)getMediaContextTypeToFirstChunkSizeInKBMap;
- (long long)getCacheScope;
- (id)getCacheRootDirectory;
- (_Bool)getIsMainThread;
- (_Bool)getShouldEnableResumableDownloads;
- (_Bool)getShouldUseNewContentStreamer;
- (_Bool)getShouldLoadCachePolicyFromServer;
- (id)getUserId;
- (long long)getContentStateDeletionAgeInDays;
- (id)getBlizzardEventLogger;
- (void)platformAssertFail:(id)arg1;
- (_Bool)getIsDataSaverModeEnabled;
- (id)getStreamingEnabledMediaContextTypeSet;
- (id)getDBLocation;
- (id)getDataProviderFactory;
- (id)getClientMetricsProcessor;
- (id)getNetworkManager;
- (id)getPayloadProcessor;
- (void)getUntrackedCaches:(id)arg1;
- (id)getOldCaches;
- (id)getCacheManagers;
- (long long)getCacheSizeLimitInMB;
- (id)initWithCacheSizeLimit:(long long)arg1 withCacheManagers:(id)arg2 withOldCaches:(id)arg3 withPayloadProcessor:(id)arg4 withNetworkManager:(id)arg5 withClientMetricsProcessor:(id)arg6 withDataProviderFactory:(id)arg7 withDbLocation:(id)arg8 withStreamingEnabledMediaContextTypeSet:(id)arg9 withFeatureSettingsService:(id)arg10 withManagedDatastoreCollector:(id)arg11 withBlizzardLogger:(id)arg12 withUserId:(id)arg13 shouldLoadCachePolicyFromServer:(_Bool)arg14 cacheScope:(long long)arg15 mediaContextTypeToFirstChunkSizeInKBMap:(id)arg16 mediaContextTypeToCacheChunkSizeInKBMap:(id)arg17 isAggressiveStreamerCancellationEnabled:(_Bool)arg18 useDefaultPriorityInitQueue:(_Bool)arg19 mediaContextTypesToUseDefaultPriorityInternalQueue:(id)arg20 mediaContextTypesToUseDefaultPriorityCallbackQueue:(id)arg21 networkMappingProviderUse304:(_Bool)arg22 networkMappingProviderRefreshIntervalSec:(long long)arg23 mediaContextTypeToPrefetchMSForProgDownloadMap:(id)arg24 attestationHeadersProvider:(id)arg25 shouldResolverEmitContentResolve:(_Bool)arg26;

@end

