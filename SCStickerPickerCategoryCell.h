//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UICollectionViewCell.h>

#import "SCBitmojiAvatarPickerViewControllerDelegate-Protocol.h"
#import "SCChatStickerManagerListener-Protocol.h"
#import "SCCustomStickerManagerListener-Protocol.h"
#import "SCExpandableStickerPackCollectionReusableViewDelegate-Protocol.h"
#import "SCGiphyStickerSearchSectionDelegate-Protocol.h"
#import "SCStickerPickerCategoryCellScrollbarDelegate-Protocol.h"
#import "SCStickerPickerCategoryLayoutDelegate-Protocol.h"
#import "SCStickerPickerHorizontalScrollCellDelegate-Protocol.h"
#import "SCStickerPickerSectionHeaderCellDelegate-Protocol.h"
#import "SCStickerQuerySuggestionControllerDelegate-Protocol.h"
#import "SCStickerTopicPickerDelegate-Protocol.h"
#import "SCStickerVenuePickerDelegate-Protocol.h"
#import "SCTraceEnabled-Protocol.h"
#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class CAGradientLayer, NSArray, NSIndexPath, NSMutableDictionary, NSMutableSet, NSString, SCCustomStickerEmptyPage, SCFeatureSettingsService, SCLazy, SCPreviewTooltipBalloon, SCShapeView, SCStickerCategory, SCStickerPickerCategoryCellScrollbar, SCStickerPickerCategoryLayout, SCStickerPickerScrollPerformanceTracker, SCStickerPickerStickerCell, SCStickerQuerySuggestionController, SCUserSession, UICollectionView, UIImageView, UILongPressGestureRecognizer, UITapGestureRecognizer;
@protocol SCBloopsPreviewsEmptyCellDelegate, SCBloopsPreviewsViewLayoutFactory, SCBloopsPreviewsViewOutput, SCBloopsStickersOnboardingCellDelegate, SCStickerPickerCategoryDelegate, SCStickerPickerMenuDelegate;

@interface SCStickerPickerCategoryCell : UICollectionViewCell <UICollectionViewDataSource, UIGestureRecognizerDelegate, UICollectionViewDelegate, SCStickerPickerCategoryCellScrollbarDelegate, SCTraceEnabled, SCStickerQuerySuggestionControllerDelegate, SCCustomStickerManagerListener, SCGiphyStickerSearchSectionDelegate, SCStickerPickerCategoryLayoutDelegate, SCExpandableStickerPackCollectionReusableViewDelegate, SCChatStickerManagerListener, SCStickerPickerHorizontalScrollCellDelegate, SCStickerVenuePickerDelegate, SCStickerTopicPickerDelegate, SCStickerPickerSectionHeaderCellDelegate, SCBitmojiAvatarPickerViewControllerDelegate>
{
    SCUserSession *_userSession;
    UICollectionView *_collectionView;
    CAGradientLayer *_gradientLayer;
    UIImageView *_skinTonePicker;
    SCShapeView *_stickerTooltip;
    SCPreviewTooltipBalloon *_friendmojiHint;
    long long _columnCount;
    UITapGestureRecognizer *_tapGestureRecognizer;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    SCStickerPickerStickerCell *_skinToneCell;
    SCStickerCategory *_unfilteredStickerCategory;
    SCStickerCategory *_stickerCategory;
    _Bool _shouldSuppressDidScrollForScrollbar;
    SCStickerPickerCategoryCellScrollbar *_scrollbar;
    double _topOffset;
    SCPreviewTooltipBalloon *_tooltip;
    SCStickerPickerStickerCell *_stickerCellIsMoving;
    _Bool _needQueryHeader;
    _Bool _needShownQuerySection;
    SCStickerQuerySuggestionController *_querySuggestor;
    _Bool _shouldDisplayScrollbar;
    NSString *_stickerIdForCellShowingFriendmojiPicker;
    SCCustomStickerEmptyPage *_customStickerEmptyAutoSection;
    double _itemHeight;
    NSArray *_contexts;
    _Bool _enableAutoCustomSticker;
    _Bool _enableWhiteUI;
    _Bool _isExpandablePackUIEnabled;
    _Bool _useVerticalGiphySection;
    NSMutableSet *_expandedDisplayGroupKeys;
    NSMutableSet *_savingDisplayGroupKeys;
    _Bool _isObservingContentSize;
    SCStickerPickerScrollPerformanceTracker *_perfTracker;
    NSIndexPath *_bloopsCellIndexPath;
    _Bool _shouldEnableSectionHeaderCellSeeAllButton;
    id <SCBloopsPreviewsViewLayoutFactory> _previewsViewLayoutFactory;
    SCLazy *_bloopsAPI;
    SCFeatureSettingsService *_featureSettingsService;
    _Bool _isDisplaying;
    _Bool _showAutocompleteToggle;
    id <SCStickerPickerCategoryDelegate> _delegate;
    id <SCStickerPickerMenuDelegate> _pickerMenuDelegate;
    double _bottomInset;
    double _bottomBarHeight;
    unsigned long long _sourceType;
    long long _superCategoryType;
    id <SCBloopsPreviewsEmptyCellDelegate> _bloopsPreviewsEmptyCellDelegate;
    id <SCBloopsStickersOnboardingCellDelegate> _bloopsStickersOnboardingCellDelegate;
    id <SCBloopsPreviewsViewOutput> _bloopsPreviewsViewOutput;
    NSMutableDictionary *_timeToDisplayMetrics;
    SCStickerPickerCategoryLayout *_layout;
    NSString *_expandedStickerKind;
    NSIndexPath *_expandedStickerIndexPath;
}

@property(retain, nonatomic) NSIndexPath *expandedStickerIndexPath; // @synthesize expandedStickerIndexPath=_expandedStickerIndexPath;
@property(retain, nonatomic) NSString *expandedStickerKind; // @synthesize expandedStickerKind=_expandedStickerKind;
@property(readonly, nonatomic) SCStickerPickerCategoryLayout *layout; // @synthesize layout=_layout;
@property(readonly, nonatomic) NSMutableDictionary *timeToDisplayMetrics; // @synthesize timeToDisplayMetrics=_timeToDisplayMetrics;
@property(nonatomic) __weak id <SCBloopsPreviewsViewOutput> bloopsPreviewsViewOutput; // @synthesize bloopsPreviewsViewOutput=_bloopsPreviewsViewOutput;
@property(nonatomic) __weak id <SCBloopsStickersOnboardingCellDelegate> bloopsStickersOnboardingCellDelegate; // @synthesize bloopsStickersOnboardingCellDelegate=_bloopsStickersOnboardingCellDelegate;
@property(nonatomic) __weak id <SCBloopsPreviewsEmptyCellDelegate> bloopsPreviewsEmptyCellDelegate; // @synthesize bloopsPreviewsEmptyCellDelegate=_bloopsPreviewsEmptyCellDelegate;
@property(nonatomic) _Bool showAutocompleteToggle; // @synthesize showAutocompleteToggle=_showAutocompleteToggle;
@property(readonly, nonatomic) long long superCategoryType; // @synthesize superCategoryType=_superCategoryType;
@property(nonatomic) unsigned long long sourceType; // @synthesize sourceType=_sourceType;
@property(nonatomic) double bottomBarHeight; // @synthesize bottomBarHeight=_bottomBarHeight;
@property(nonatomic) double bottomInset; // @synthesize bottomInset=_bottomInset;
@property(nonatomic) _Bool isDisplaying; // @synthesize isDisplaying=_isDisplaying;
@property(nonatomic) __weak id <SCStickerPickerMenuDelegate> pickerMenuDelegate; // @synthesize pickerMenuDelegate=_pickerMenuDelegate;
@property(nonatomic) __weak id <SCStickerPickerCategoryDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)_showHorizontalContentInsetsInSection:(unsigned long long)arg1;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (void)_updateCollectionContentInsetsWithTopInset:(double)arg1;
- (void)didTapSeeAllForSectionHeaderCell:(id)arg1 withType:(unsigned long long)arg2;
- (void)stickerPickerHorizontalScrollCellAnnounceDataChange:(id)arg1;
- (void)stickerPickerHorizontalScrollCellViewDidScrollCompletion:(CDUnknownBlockType)arg1;
- (_Bool)stickerPickerHorizontalScrollCellShouldShowLoadingSpinner:(id)arg1;
- (id)stickerPickerHorizontalScrollCellEmptyView:(id)arg1;
- (id)customStickerEmptyView;
- (void)horizontalCell:(id)arg1 stickerCell:(id)arg2 stickerSelected:(id)arg3 center:(struct CGPoint)arg4 thumbnail:(id)arg5 index:(unsigned long long)arg6;
- (void)stickerTopicPicker:(id)arg1 didSelectSticker:(id)arg2;
- (void)stickerVenuePickerDidTapRetry:(id)arg1;
- (void)stickerVenuePicker:(id)arg1 didSelectSticker:(id)arg2;
- (void)stickerVenuePicker:(id)arg1 didTapReportButton:(id)arg2 venue:(id)arg3;
- (void)stickerPackagesDidChangeWithCategoryType:(long long)arg1;
- (void)_toggleExpandablePickerOfKind:(id)arg1 atIndexPath:(id)arg2;
- (void)didEndDisplay;
- (void)willDisplay;
- (_Bool)hasUnlockedStickerPackageWithPackId:(id)arg1;
- (void)_configureDisplayGroupView:(id)arg1 uncorrectedIndexPath:(id)arg2;
- (void)logVisibleItems;
- (void)toggleExpandableGroup:(id)arg1;
- (void)setSaveState:(unsigned long long)arg1 expandableGroup:(id)arg2;
- (id)_firstPathInDisplayGroup:(id)arg1;
- (id)_uncorrectedIndexPathsInExpandableGroup:(id)arg1 stickerCategory:(id)arg2;
- (double)heightForToggleableUIForCollectionView:(id)arg1 kind:(id)arg2 layout:(id)arg3;
- (_Bool)shouldShowToggleableUIForIndexPath:(id)arg1;
- (id)kindForToggleableUIForIndexPath:(id)arg1;
- (_Bool)isSponsoredDisplayGroupAtUncorrectedIndexPath:(id)arg1;
- (_Bool)isExpandableDisplayGroupAtUncorrectedIndexPath:(id)arg1;
- (id)displayGroupKeyForUncorrectedIndexPath:(id)arg1;
- (id)stickerForUncorrectedIndexPath:(id)arg1;
- (_Bool)isDisplayGroupTruncatableAtUncorrectedIndexPath:(id)arg1;
- (_Bool)shouldLayoutForExpandablePacks;
- (void)updateCollectionViewAnimated:(_Bool)arg1 deltaContentOffset:(double)arg2 topMargin:(double)arg3;
- (void)showSuggestor;
- (void)hideSuggestor;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)categoryCellScrollbar:(id)arg1 didScrollToSection:(long long)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)sectionCell:(id)arg1 stickerSelected:(id)arg2 center:(struct CGPoint)arg3 thumbnail:(id)arg4 index:(unsigned long long)arg5;
- (void)querySuggestControllerDidSelectItem:(id)arg1;
- (void)_prepareForStickerMoving:(id)arg1;
- (void)_completeForStickerMoving;
- (void)_setOpacityForCustomStickerCells:(double)arg1 duration:(double)arg2 userInteractionEnabled:(_Bool)arg3;
- (void)deleteCellFromAutoSection:(id)arg1 horizontalCell:(id)arg2 isMovedToSave:(_Bool)arg3 isDeleted:(_Bool)arg4;
- (void)deleteCellFromSavedSection:(id)arg1;
- (void)collectionViewLongPressed:(id)arg1;
- (void)collectionViewTapped:(id)arg1;
- (id)_stickerCellForGestureRecognizer:(id)arg1;
- (id)_stickerCellFromCollectionViewCell:(id)arg1 gestureRecognizer:(id)arg2;
- (id)_cellForGestureRecognizer:(id)arg1;
- (id)_bestCellForFriendmojiHint;
- (double)_tooltipYOffsetForCell:(id)arg1 extraHeight:(double)arg2;
- (_Bool)showFriendmojiHintIfPossible;
- (_Bool)_showFriendmojiPicker:(id)arg1;
- (id)_getBloopsCell;
- (id)getBloopsPreviewsView;
- (void)tooltipBalloonDismissed;
- (void)didCloseAvatarPickerWithoutSelectingAvatar;
- (void)avatarPickerBitmojiUserSelected:(id)arg1;
- (void)_hideStickerTooltip;
- (void)_setTooltipPathWithTooltipPathCenter:(double)arg1 tooltipEdges:(struct CGRect)arg2;
- (void)_setTooltipTransform;
- (void)_setTooltipTitle:(id)arg1 textSize:(struct CGSize)arg2;
- (void)_initStickerTooltipWithCell:(id)arg1 tooltipEdges:(struct CGRect)arg2;
- (void)_showStickerTooltipForCell:(id)arg1 title:(id)arg2;
- (void)presentTooltipForCell:(id)arg1 title:(id)arg2 dismissalDelay:(double)arg3;
- (void)setOpacityForVisibleEmojis:(double)arg1 userInteractionEnabled:(_Bool)arg2 selectedStickerCell:(id)arg3 duration:(double)arg4;
- (long long)skinToneFromLoc:(struct CGPoint)arg1;
- (_Bool)touchInSkinTonePickerRange:(struct CGPoint)arg1;
- (void)hideSkinTonePicker;
- (void)showSkinTonePicker:(id)arg1;
- (void)appendSkinTone:(long long)arg1 cell:(id)arg2;
- (_Bool)_shouldShowGroupInviteStickerTooltip;
- (id)_contextsForNetworkRequest;
- (long long)_uncorrectSectionIndex:(long long)arg1;
- (long long)_correctSectionIndex:(long long)arg1;
- (void)collectionView:(id)arg1 willDisplaySupplementaryView:(id)arg2 forElementKind:(id)arg3 atIndexPath:(id)arg4;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)_trackSticker:(id)arg1 timeToDisplay:(double)arg2 indexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumInteritemSpacingForSectionAt:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)showToolTipBelowFirstCellWithText:(id)arg1;
- (void)fadeOutTooltip;
- (_Bool)canSubCellCollectionViewHandleGesture:(id)arg1;
- (_Bool)isCollectionViewGestureRecognizer:(id)arg1;
@property(readonly, nonatomic) _Bool isAtTop;
@property(nonatomic) double contentOffsetY;
- (_Bool)_shouldShowExpandableGroupForStickerPackId:(id)arg1;
- (id)_displayGroupKeyForSticker:(id)arg1;
- (id)_groupedStickerCategoryFromUnfiltered:(id)arg1;
- (void)setStickerCategory:(id)arg1 superCategoryType:(long long)arg2 queryKeywords:(id)arg3 enableWhiteUI:(_Bool)arg4 columnCount:(long long)arg5 expandablePackUIEnabled:(_Bool)arg6 userSession:(id)arg7;
- (double)_calculateContentWidth;
- (void)_layoutCollectionView;
- (void)layoutSubviews;
- (void)resetLayout;
- (void)removeSection:(long long)arg1;
- (void)updateStickersInSection:(long long)arg1;
- (void)_scrollScrollbarToCurrentSectionAnimated:(_Bool)arg1;
- (double)_itemHeightWithSpacing:(double)arg1 shouldDisplayScrollbar:(_Bool)arg2;
- (double)_spacing;
- (void)stopEmptySectionVideoPlay;
- (void)startEmptySectionVideoPlay;
- (void)customStickerAutoSectionDataDidChange;
- (void)customStickerDataDidChange;
- (void)performCollectionViewUpdates:(CDUnknownBlockType)arg1;
- (void)prepareForReuse;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 shouldIncludeQueryHeader:(_Bool)arg2 useVerticalGiphySection:(_Bool)arg3 sourceType:(unsigned long long)arg4;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

