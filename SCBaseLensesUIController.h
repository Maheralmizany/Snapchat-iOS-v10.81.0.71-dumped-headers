//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "LSAEffectComponentListener-Protocol.h"
#import "LSATouchProcessingDelegate-Protocol.h"
#import "LSATrackingComponentListener-Protocol.h"
#import "SCCrashedLensIdProvider-Protocol.h"
#import "SCLensBitmojiAlertUIControllerDelegate-Protocol.h"
#import "SCLensCarouselPresenterDelegate-Protocol.h"
#import "SCLensHintPresenterDelegate-Protocol.h"
#import "SCTraceEnabled-Protocol.h"

@class LSATouchProcessingController, NSArray, NSString, SCIdleTimerManager, SCLensBitmojiAlertUIController, SCLensCompassAndLocationProvider, SCLensHintPresenter, SCLensHintProvider, SCLensInCameraUsageNotifier, SCLensLayoutProvider, SCLensPhotoFaceImageProvider, SCLensPresetImageProvider, SCLensRemoteAssetsDataProvider, SCLensSbSnappable, SCLensTapToActivateLogger, SCLensUIUpdateListenerAnnouncer, SCLensUriServiceProvider, SCLensUriServiceSonicAssetHandler, SCLensUserInterfaceTooltipPresenter, SCLensValidator, SCLensesUIControllerState, SCPreferences, SCSponsoredSlugInteractiveView, SIGAlertDialog, UICollectionView, UILabel, UITapGestureRecognizer, UIView;
@protocol LSAGeoDataComponentListener, SCDownloadableContentManaging, SCFeatureToggleCameraButton, SCLensAdInfoPresenterProtocol, SCLensBitmojiAlertLogger, SCLensBitmojiProvider><SCLensUIUpdateListener, SCLensCarouselPresenterProtocol, SCLensCompoundLogger, SCLensConversationMetadataProvider, SCLensDataProviderProtocol, SCLensGestureViewProvider, SCLensIconInMemoryCache, SCLensProcessingCore, SCLensSharedStateControllerProvider, SCLensSubPickerControllerProtocol, SCLensTestSessionFactoryProtocol, SCLensTestSessionProtocol, SCLensTextInputProvider, SCLensUsageTrackerProtocol, SCLensUserDataProvider><LSAUserDataComponentListener, SCLensUserInterfaceDelegate, SCLensUserProvider, SCLensesUIControllerStudySettingsProviderProtocol, SCSnappablesFutureProvider, UIGestureRecognizerDelegate;

@interface SCBaseLensesUIController : NSObject <SCTraceEnabled, LSATouchProcessingDelegate, LSATrackingComponentListener, SCLensHintPresenterDelegate, SCCrashedLensIdProvider, LSAEffectComponentListener, SCLensCarouselPresenterDelegate, SCLensBitmojiAlertUIControllerDelegate>
{
    SCLensRemoteAssetsDataProvider *_lensRemoteAssetsDataProvider;
    SCLensCompassAndLocationProvider *_compassAndLocationProvider;
    SCLensUriServiceProvider *_uriServiceProvider;
    id <SCSnappablesFutureProvider> _snappablesFutureProvider;
    id <SCLensTextInputProvider> _textInputProvider;
    SCLensUriServiceSonicAssetHandler *_sonicAssetHandler;
    id <SCLensSharedStateControllerProvider> _sharedStateControllerProvider;
    _Bool _blockCameraTouches;
    SCLensTapToActivateLogger *_tapToActivateLogger;
    SCLensHintPresenter *_hintPresenter;
    SCLensUserInterfaceTooltipPresenter *_userInterfaceTooltipPresenter;
    SCLensHintProvider *_hintProvider;
    id <SCLensUsageTrackerProtocol> _lensUsageTracker;
    SCLensInCameraUsageNotifier *_lensUsageNotifier;
    SCLensValidator *_lensValidator;
    SCIdleTimerManager *_idleTimerManager;
    SIGAlertDialog *_alertDialog;
    id <SCLensTestSessionProtocol> _lensTestSession;
    id <SCLensTestSessionFactoryProtocol> _lensTestSessionFactory;
    id <SCDownloadableContentManaging> _downloadableContentManager;
    id <SCLensBitmojiAlertLogger> _lensBitmojiAlertLogger;
    NSArray *_collectionViewConstraints;
    id <SCLensesUIControllerStudySettingsProviderProtocol> _studySettingsProvider;
    UICollectionView *_lensesCollectionView;
    UIView *_lensDownloadOverlay;
    id <SCLensSubPickerControllerProtocol> _lensSubPickerController;
    SCLensPresetImageProvider *_lensSubPickerPresetImageProvider;
    SCLensPhotoFaceImageProvider *_lensSubPickerPhotoFaceImageProvider;
    CDUnknownBlockType _lensSubPickerPhotoFaceImageProviderDeallocBlock;
    LSATouchProcessingController *_touchProcessingController;
    SCLensBitmojiAlertUIController *_lensBitmojiAlertUIController;
    id <SCLensBitmojiProvider><SCLensUIUpdateListener> _lensBitmojiProvider;
    id <SCLensUserDataProvider><LSAUserDataComponentListener> _lensUserDataProvider;
    id <LSAGeoDataComponentListener> _lensGeoDataProvider;
    NSString *_lensDataProviderToken;
    SCLensLayoutProvider *_lensLayoutProvider;
    id <SCLensProcessingCore> _lensProcessingCore;
    id <SCLensUserProvider> _lensUserProvider;
    id <SCLensIconInMemoryCache> _lensIconInMemoryCache;
    _Bool _lensesActive;
    id <SCLensCarouselPresenterProtocol> _mainCarouselPresenter;
    SCLensUIUpdateListenerAnnouncer *_uiUpdateAnnouncer;
    id <SCFeatureToggleCameraButton> _toggleCameraButton;
    id <UIGestureRecognizerDelegate> _gestureRecognizerDelegate;
    id <SCLensUserInterfaceDelegate> _lensUserInterfaceDelegate;
    UITapGestureRecognizer *_downloadOverlayTapGestureRecognizer;
    UITapGestureRecognizer *_sponsoredSlugTapGestureRecognizer;
    id <SCLensAdInfoPresenterProtocol> _adInfoPresenter;
    id <SCLensDataProviderProtocol> _lensDataProvider;
    UIView<SCLensGestureViewProvider> *_parentView;
    UIView *_hidableViewContainer;
    id <SCLensConversationMetadataProvider> _conversationMetadataProvider;
    id <SCLensCompoundLogger> _lensLogger;
    SCPreferences *_userPreferences;
    UILabel *_lensHintLabel;
    UILabel *_tapToDownloadLabel;
    SCSponsoredSlugInteractiveView *_sponsoredSlugView;
    UILabel *_demoLensWarningLabel;
    UILabel *_demoLensReleaseDateLabel;
    SCLensesUIControllerState *_state;
    NSString *_lensActivatorId;
}

@property(copy, nonatomic) NSString *lensActivatorId; // @synthesize lensActivatorId=_lensActivatorId;
@property(retain, nonatomic) SCLensesUIControllerState *state; // @synthesize state=_state;
@property(retain, nonatomic) SCLensBitmojiAlertUIController *lensBitmojiAlertUIController; // @synthesize lensBitmojiAlertUIController=_lensBitmojiAlertUIController;
@property(retain, nonatomic) UILabel *demoLensReleaseDateLabel; // @synthesize demoLensReleaseDateLabel=_demoLensReleaseDateLabel;
@property(retain, nonatomic) UILabel *demoLensWarningLabel; // @synthesize demoLensWarningLabel=_demoLensWarningLabel;
@property(retain, nonatomic) SCSponsoredSlugInteractiveView *sponsoredSlugView; // @synthesize sponsoredSlugView=_sponsoredSlugView;
@property(retain, nonatomic) UILabel *tapToDownloadLabel; // @synthesize tapToDownloadLabel=_tapToDownloadLabel;
@property(retain, nonatomic) UILabel *lensHintLabel; // @synthesize lensHintLabel=_lensHintLabel;
@property(readonly, nonatomic) SCPreferences *userPreferences; // @synthesize userPreferences=_userPreferences;
@property(readonly, nonatomic) id <SCLensCompoundLogger> lensLogger; // @synthesize lensLogger=_lensLogger;
@property(nonatomic, getter=areLensesActive) _Bool lensesActive; // @synthesize lensesActive=_lensesActive;
@property(nonatomic) __weak id <SCLensConversationMetadataProvider> conversationMetadataProvider; // @synthesize conversationMetadataProvider=_conversationMetadataProvider;
@property(nonatomic) __weak UIView *hidableViewContainer; // @synthesize hidableViewContainer=_hidableViewContainer;
@property(nonatomic) __weak UIView<SCLensGestureViewProvider> *parentView; // @synthesize parentView=_parentView;
@property(readonly, nonatomic) id <SCLensDataProviderProtocol> lensDataProvider; // @synthesize lensDataProvider=_lensDataProvider;
@property(readonly, nonatomic) __weak id <SCLensAdInfoPresenterProtocol> adInfoPresenter; // @synthesize adInfoPresenter=_adInfoPresenter;
@property(retain, nonatomic) UITapGestureRecognizer *sponsoredSlugTapGestureRecognizer; // @synthesize sponsoredSlugTapGestureRecognizer=_sponsoredSlugTapGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *downloadOverlayTapGestureRecognizer; // @synthesize downloadOverlayTapGestureRecognizer=_downloadOverlayTapGestureRecognizer;
@property(nonatomic) __weak id <SCLensUserInterfaceDelegate> lensUserInterfaceDelegate; // @synthesize lensUserInterfaceDelegate=_lensUserInterfaceDelegate;
@property(nonatomic) __weak id <UIGestureRecognizerDelegate> gestureRecognizerDelegate; // @synthesize gestureRecognizerDelegate=_gestureRecognizerDelegate;
@property(nonatomic) __weak id <SCFeatureToggleCameraButton> toggleCameraButton; // @synthesize toggleCameraButton=_toggleCameraButton;
@property(readonly, nonatomic) SCLensUIUpdateListenerAnnouncer *uiUpdateAnnouncer; // @synthesize uiUpdateAnnouncer=_uiUpdateAnnouncer;
@property(readonly, nonatomic) id <SCLensCarouselPresenterProtocol> mainCarouselPresenter; // @synthesize mainCarouselPresenter=_mainCarouselPresenter;
- (void).cxx_destruct;
- (void)lensBitmojiAlertUIControllerDidDisappear:(id)arg1;
- (void)lensBitmojiAlertUIControllerDidAppear:(id)arg1;
@property(readonly, nonatomic) unsigned long long lensEntryPoint;
- (id)lensIdForCrashLogger;
- (void)hideKeyboard;
- (void)resetTextInput;
- (id)externalComponentForCurrentLens;
- (id)presetsComponentForCurrentLens;
- (void)_updateTapToActivateLoggerForLens:(id)arg1;
- (void)_createTapToActivateLoggerForLens:(id)arg1;
- (void)lensHintPresenterDidHideHint:(id)arg1;
- (void)lensHintPresenterWillShowHint:(id)arg1;
- (_Bool)lensHintPresenterShouldShowHint:(id)arg1;
- (void)touchProcessingController:(id)arg1 didReceiveError:(id)arg2;
- (void)touchProcessingControllerDidFinishInteraction:(id)arg1;
- (void)touchProcessingControllerDidProcessTouches:(id)arg1;
- (void)lensContainerTapped;
- (void)setUIActivatedForLens:(id)arg1;
- (id)currentCarouselPresenter;
- (void)hideAllHintsForAppliedLensIfNeeded;
- (void)showOrHideSponsoredSlugForLensIfNeeded:(id)arg1;
- (void)activateLens:(id)arg1 launchData:(id)arg2 setLensCompletion:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)clearLens;
- (void)applyLens:(id)arg1 launchData:(id)arg2;
- (void)lensCarouselPresenter:(id)arg1 didEndScrolling:(id)arg2 atLens:(id)arg3;
- (void)lensCarouselPresenter:(id)arg1 didScroll:(id)arg2 selectedCellDistance:(double)arg3 selectedLens:(id)arg4;
- (void)lensCarouselPresenter:(id)arg1 didScroll:(id)arg2 selectedCellDistance:(double)arg3;
- (_Bool)lensCarouselPresenter:(id)arg1 isLensBeingApplied:(id)arg2;
- (void)lensCarouselPresenter:(id)arg1 didUpdateLensesList:(id)arg2;
- (void)lensCarouselPresenter:(id)arg1 didEndDisplayingLens:(id)arg2;
- (void)lensCarouselPresenter:(id)arg1 willDisplayLens:(id)arg2;
- (void)lensCarouselPresenter:(id)arg1 didSelectLens:(id)arg2 index:(unsigned long long)arg3 originalLensIndex:(unsigned long long)arg4 totalLensesCount:(unsigned long long)arg5;
- (void)hideDemoLensWarning;
- (void)showDemoLensWarningForLens:(id)arg1;
- (void)fadeInSponsoredSlug;
- (void)fadeOutSponsoredSlug;
- (void)showHintView:(_Bool)arg1 withHintView:(id)arg2 animated:(_Bool)arg3;
- (void)showTapToDownloadHint:(_Bool)arg1 animated:(_Bool)arg2;
- (void)trackingComponent:(id)arg1 didRecognizeFaces:(unsigned long long)arg2;
- (void)trackingComponent:(id)arg1 didRecognizeExpression:(id)arg2;
- (void)effectComponent:(id)arg1 effectId:(id)arg2 setScreenDimmingEnabled:(_Bool)arg3;
- (void)effectComponent:(id)arg1 effectId:(id)arg2 performInterfaceAction:(unsigned long long)arg3 interfaceElement:(unsigned long long)arg4 interfaceData:(id)arg5;
- (void)effectComponent:(id)arg1 effectId:(id)arg2 showPopUpHintWithId:(id)arg3 interfaceElement:(unsigned long long)arg4;
- (void)effectComponent:(id)arg1 effectId:(id)arg2 performHapticFeedback:(unsigned long long)arg3;
- (void)effectComponent:(id)arg1 hideAllHintsForEffectWithId:(id)arg2;
- (void)effectComponent:(id)arg1 effectId:(id)arg2 showHintWithId:(id)arg3;
- (void)effectComponent:(id)arg1 didTurnOffEffectWithId:(id)arg2 features:(unsigned long long)arg3;
- (void)effectComponent:(id)arg1 didTurnOnEffectWithId:(id)arg2 features:(unsigned long long)arg3;
- (void)showAdInfoPage;
- (void)downloadCurrentLensIfNecessary;
- (void)hideLensesUI:(_Bool)arg1;
- (void)hideLensesUI:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showLensesUI:(_Bool)arg1;
- (void)showLensesUI:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)isRegressorNeeded;
- (void)cleanup;
- (void)selectLensWithIdIfPossible:(id)arg1;
- (void)setLensesActive:(_Bool)arg1 appearanceConfiguration:(id)arg2 activationState:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)excludedHintIds;
- (void)reloadLensDataProviderWithLensIdToRestore:(id)arg1;
@property(readonly, nonatomic) SCLensSbSnappable *appliedSnappablesMetadata;
- (id)lensAssetsUploadOperationFuture;
- (id)snappablesDataFuture;
- (void)_saveSubPickerActiveOptionId;
- (void)_hideLensModalCard;
- (void)_showLensModalCardWithTitleId:(id)arg1 descriptionId:(id)arg2;
- (void)_hideSubPicker;
- (void)_showSubPickerWithFaceFilteringEnabled:(_Bool)arg1;
- (_Bool)canAutoselectLensOnScroll;
- (_Bool)isCurrentLensDownloadingInProgress;
- (_Bool)isLensRotationGestureRecognizer:(id)arg1;
- (_Bool)isLensLongPressGestureRecognizer:(id)arg1;
- (_Bool)isLensPanGestureRecognizer:(id)arg1;
- (_Bool)isLensPinchGestureRecognizer:(id)arg1;
- (_Bool)isLensTapGestureRecognizer:(id)arg1;
- (_Bool)isLensTouchProcessingGestureRecognizer:(id)arg1;
- (_Bool)isAnyLensTouchProcessingGestureRecognizer:(id)arg1;
@property(readonly, nonatomic) _Bool lensTouchProcessingActive;
@property(readonly, nonatomic) _Bool blockTouchesForCurrentLens;
- (_Bool)pointInsideLensSubPicker:(struct CGPoint)arg1;
- (_Bool)_pointInsideLensView:(struct CGPoint)arg1 cellFramesOnly:(_Bool)arg2;
- (_Bool)pointInsideAnyLensViewButton:(struct CGPoint)arg1;
- (_Bool)pointInsideAnyLensView:(struct CGPoint)arg1;
- (void)_prepareLensDownloadOverlay;
- (double)_slugVerticalMargin;
- (void)_initializeLensCarouselPresenter;
- (void)initLensesCollectionViewProperties:(id)arg1;
- (void)setCollectionViewConstraints:(id)arg1;
- (id)prepareCollectionViewConstraints;
@property(readonly, nonatomic) UICollectionView *lensesCollectionView;
- (void)dealloc;
- (id)initWithParentViewContainer:(id)arg1 hidableViewContainer:(id)arg2 adInfoPresenter:(id)arg3 lensProcessingCore:(id)arg4 lensDataProvider:(id)arg5 lensLayoutProvider:(id)arg6 conversationMetadataProvider:(id)arg7 lensUserProvider:(id)arg8 compassAndLocationProvider:(id)arg9 lensRemoteAssetsDataProvider:(id)arg10 lensBitmojiProvider:(id)arg11 uriServiceProvider:(id)arg12 snappablesFutureProvider:(id)arg13 textInputProvider:(id)arg14 sonicAssetHandler:(id)arg15 sharedStateControllerProvider:(id)arg16 lensUsageTracker:(id)arg17 lensUsageNotifier:(id)arg18 lensLogger:(id)arg19 lensUserDataProvider:(id)arg20 lensGeoDataProvider:(id)arg21 userPreferences:(id)arg22 downloadableContentManager:(id)arg23 lensIconInMemoryCache:(id)arg24 lensBitmojiAlertLogger:(id)arg25 studySettingsProvider:(id)arg26;
- (id)initWithParentViewContainer:(id)arg1 hidableViewContainer:(id)arg2 adInfoPresenter:(id)arg3 userSession:(id)arg4 lensProcessingCore:(id)arg5 lensDataProvider:(id)arg6 lensLayoutProvider:(id)arg7 scanFromLens:(id)arg8 conversationMetadataProvider:(id)arg9 lensUserProvider:(id)arg10 studySettingsProvider:(id)arg11;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

