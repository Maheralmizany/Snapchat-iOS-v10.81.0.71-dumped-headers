//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCLagunaFirmwareUpdateEventListener-Protocol.h"
#import "SCLocationObserver-Protocol.h"
#import "SCSpectaclesAppStatusInAppNotificationRequest-Protocol.h"
#import "SCSpectaclesAppStatusProviding-Protocol.h"
#import "SCSpectaclesAppStatusUIAutomation-Protocol.h"
#import "SCSpectaclesAppWifiTransferInitiating-Protocol.h"
#import "SCSpectaclesAutomaticTransferControllerDelegate-Protocol.h"
#import "SCSpectaclesCrashStatusRecording-Protocol.h"
#import "SCSpectaclesEventListener-Protocol.h"
#import "SCSpectaclesWifiControllerEventListener-Protocol.h"

@class NSMutableDictionary, NSString, SCAppNotification, SCPreferences, SCSessionRequestManager, SCSpectaclesAppStatusListenerAnnouncer, SCSpectaclesAutomaticTransferController, SCSpectaclesCrashContext, SCSpectaclesServices;
@protocol SCLagunaManiphestAdapter, SCNotificationManager, SCSpectaclesTweaksConfigProvider;

@interface SCSpectaclesAppStatusCoordinator : NSObject <SCSpectaclesAppStatusUIAutomation, SCLagunaFirmwareUpdateEventListener, SCSpectaclesWifiControllerEventListener, SCLocationObserver, SCSpectaclesAutomaticTransferControllerDelegate, SCSpectaclesEventListener, SCSpectaclesAppStatusProviding, SCSpectaclesAppWifiTransferInitiating, SCSpectaclesCrashStatusRecording, SCSpectaclesAppStatusInAppNotificationRequest>
{
    _Bool _spectaclesMemoriesOnScreen;
    _Bool _spectaclesSettingsOnScreen;
    SCSpectaclesCrashContext *_crashContext;
    SCSpectaclesAutomaticTransferController *_automaticTransferController;
    SCAppNotification *_pendingNewSnapsFromSpectaclesNotification;
    unsigned long long _automaticTransferInitiationBackgroundTask;
    SCSpectaclesServices *_services;
    SCPreferences *_userPreferences;
    SCSessionRequestManager *_requestManager;
    id <SCNotificationManager> _notificationManager;
    id <SCLagunaManiphestAdapter> _maniphestAdapter;
    id <SCSpectaclesTweaksConfigProvider> _tweaksConfigProvider;
    unsigned long long _numberOfTriesForPushingPairingCompletion;
    _Bool _needToDisplayBluetoothErrorAlert;
    _Bool _hasSeenBluetoothErrorAlert;
    _Bool _hasSeenFirmwareUpdateRequiredAlert;
    _Bool _needToDisplayUnpairedAlert;
    _Bool _hasSetCountryCode;
    _Bool _downloadingGPSAlmanac;
    _Bool _hasSeenTransferStatusInMemories;
    SCSpectaclesAppStatusListenerAnnouncer *_announcer;
    NSMutableDictionary *_deviceStates;
}

+ (_Bool)_isIdleState:(long long)arg1;
+ (_Bool)_isFirmwareUpdateState:(long long)arg1;
+ (_Bool)_isWifiBootState:(long long)arg1;
+ (_Bool)_isTransferState:(long long)arg1;
+ (_Bool)_isItAnAlertState:(long long)arg1;
+ (_Bool)_isDeviceLowStorageSpace:(id)arg1;
+ (_Bool)_isDeviceHighTemperature:(id)arg1;
+ (_Bool)_isDeviceLowTemperature:(id)arg1;
+ (_Bool)_isDeviceLowBattery:(id)arg1;
@property(retain, nonatomic) NSMutableDictionary *deviceStates; // @synthesize deviceStates=_deviceStates;
@property(readonly, nonatomic) _Bool hasSeenTransferStatusInMemories; // @synthesize hasSeenTransferStatusInMemories=_hasSeenTransferStatusInMemories;
@property(nonatomic, getter=isDownloadingGPSAlmanac) _Bool downloadingGPSAlmanac; // @synthesize downloadingGPSAlmanac=_downloadingGPSAlmanac;
@property(nonatomic) _Bool hasSetCountryCode; // @synthesize hasSetCountryCode=_hasSetCountryCode;
@property(nonatomic) _Bool needToDisplayUnpairedAlert; // @synthesize needToDisplayUnpairedAlert=_needToDisplayUnpairedAlert;
@property(nonatomic) _Bool hasSeenFirmwareUpdateRequiredAlert; // @synthesize hasSeenFirmwareUpdateRequiredAlert=_hasSeenFirmwareUpdateRequiredAlert;
@property(nonatomic) _Bool hasSeenBluetoothErrorAlert; // @synthesize hasSeenBluetoothErrorAlert=_hasSeenBluetoothErrorAlert;
@property(nonatomic) _Bool needToDisplayBluetoothErrorAlert; // @synthesize needToDisplayBluetoothErrorAlert=_needToDisplayBluetoothErrorAlert;
@property(retain, nonatomic) SCSpectaclesAppStatusListenerAnnouncer *announcer; // @synthesize announcer=_announcer;
- (void).cxx_destruct;
- (void)_announcePressedLearnMoreForBluetoothOverloadError;
- (void)_announceNeedsToUpdateStateForDevice:(id)arg1;
- (void)_announceStatusCoordinatorNumberOfDevicesUpdated;
- (void)_announceStatusCoordinatorBluetoothTurnedOff;
- (void)_announceStatusCoordinatorBluetoothTurnedOn;
- (id)_logStringForLagunaState:(long long)arg1;
- (id)_getHdSessionAnalyticsInfoWithTransferSession:(id)arg1 device:(id)arg2;
- (void)_endAutomaticTransferInitiationBackgroundTask;
- (void)_startAutomaticTransferInitiationBackgroundTask;
- (void)_showPendingNewSnapsFromSpectaclesNotification;
- (void)_scheduleNewSnapsFromSpectaclesNotification:(id)arg1;
- (void)_failedToInitiateAutomaticWiFiTransfer;
- (void)_initiateAutomaticTransferIfPossibleWithDevice:(id)arg1 deviceJustStartsCharging:(_Bool)arg2;
- (id)_shouldInitiateTransferWithDevice:(id)arg1 contentIds:(id)arg2 tooltipsStatusProvider:(id)arg3 isUserInteractionAllowed:(_Bool)arg4;
- (void)_showLagunaUnpairedErrorAlertView;
- (void)_showLagunaRestartErrorAlertView;
- (double)_delayTimeForState:(long long)arg1;
- (long long)_idleStateForDevice:(id)arg1;
- (id)_deviceStateForDevice:(id)arg1;
- (void)_setNewDeviceState:(id)arg1 forDevice:(id)arg2;
- (id)_connectedDevices;
- (id)_pairedDevices;
- (id)_gpsAlmanacData;
- (void)_downloadGPSAlmanacWithCompletion:(CDUnknownBlockType)arg1;
- (void)_updateGPSAlmanacIfNeededForDevice:(id)arg1;
- (void)_setCountryCodeIfNecessary;
- (void)_checkIfNeedToDisplayUnpairedAlert;
- (void)_checkIfNeedToDisplayFirmwareUpdateRequiredAlert;
- (void)_checkIfNeedToDisplayBluetoothErrorAlert;
- (void)_checkIfStateNeedsToDisappear;
- (void)_clearAlertStateForDevice:(id)arg1;
- (void)_clearAlertStateForAllDevices;
- (void)_initializeStateForDevice:(id)arg1;
- (void)_tryTransitionDevice:(id)arg1 withNewState:(id)arg2 alertStateTimedOut:(_Bool)arg3;
- (void)_tryTransitionDevice:(id)arg1 withNewState:(id)arg2;
- (void)_transitionToIdleStateForDevice:(id)arg1;
- (_Bool)_shouldDismissAlertForDeviceStateUpdate:(id)arg1;
- (void)_refreshStateForDevice:(id)arg1;
- (void)_updateCrashContext;
- (void)_postInitSetup;
- (void)automaticTransferControllerFailedToInitiateAutomaticTransfer:(id)arg1;
- (void)automaticTransferController:(id)arg1 initiatedAutomaticTransferWithChannel:(long long)arg2;
- (void)_retryPushingPairingCompleteNotification;
- (void)pushPairingCompleteNotificationIfNeeded;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)onLocationUpdate:(id)arg1;
- (id)locationObserverIdentifier;
- (id)locationObserverDispatchQueue;
- (_Bool)locationObserverWantsActiveLocationMonitoring;
- (void)_checkForMissingImuForContent:(id)arg1;
- (_Bool)_shouldDeviceHaveImuFix:(id)arg1;
- (void)lagunaOnNewFirmwareVersionFetched;
- (void)lagunaOnFirmwareUpdateEvent:(unsigned long long)arg1 device:(id)arg2;
- (void)lagunaOnFirmwareUpdateForDevice:(id)arg1 failedFromState:(unsigned long long)arg2;
- (void)lagunaOnFirmwareUpdateForDevice:(id)arg1 changedState:(unsigned long long)arg2 progress:(float)arg3;
- (void)spectaclesOnBluetoothStateUpdate:(long long)arg1;
- (void)spectaclesDevice:(id)arg1 onAlertNotification:(unsigned long long)arg2;
- (void)spectaclesDevice:(id)arg1 didUnpairWithReason:(unsigned long long)arg2;
- (void)spectaclesDevice:(id)arg1 onDeviceLogsUpdate:(unsigned long long)arg2;
- (void)spectaclesTransferSession:(id)arg1 onTransferUpdate:(unsigned long long)arg2;
- (void)spectaclesDevice:(id)arg1 didUpdateInfo:(unsigned long long)arg2;
- (void)spectaclesOnDeviceForgotten:(id)arg1;
- (void)spectaclesDeviceDidPair:(id)arg1;
- (void)spectaclesDeviceDidUpdateState:(id)arg1;
- (void)spectaclesWifiControllerDidUpdateState:(long long)arg1 device:(id)arg2;
- (void)initiateTransferForHDContentIds:(id)arg1 tooltipsStatusProvider:(id)arg2 device:(id)arg3 startSource:(unsigned long long)arg4 useAutomaticTransferMode:(_Bool)arg5;
- (void)initiateTransferForAllUntransferredHDContentWithTooltipsStatusProvider:(id)arg1 device:(id)arg2 startSource:(unsigned long long)arg3 useAutomaticTransferMode:(_Bool)arg4;
- (id)expandedStatusDescriptionForDevice:(id)arg1;
- (id)getCurrentHdSessionAnalyticsInfo;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (void)setSpectaclesSettingsOnScreen:(_Bool)arg1;
- (void)setSpectaclesMemoriesOnScreen:(_Bool)arg1;
- (_Bool)isDeviceUpdating:(id)arg1;
- (_Bool)isDeviceTransferring:(id)arg1;
- (_Bool)isUserTriggeredStateForDevice:(id)arg1;
- (_Bool)isBluetoothOn;
- (id)crashContext;
- (id)pairingCompleteMessageForConnectedDevice;
- (long long)_numberOfUntransferredContentsFromConnectedDevice;
- (long long)numberOfConnectedDevices;
- (long long)numberOfPairedDevices;
- (long long)numberOfDevices;
- (long long)indexOfDevice:(id)arg1;
- (id)connectedDeviceAtIndex:(long long)arg1;
- (id)pairedDeviceAtIndex:(long long)arg1;
- (id)deviceAtIndex:(long long)arg1;
- (id)statusForDevice:(id)arg1;
- (void)dealloc;
- (id)initWithRequestManager:(id)arg1 userPreferences:(id)arg2 services:(id)arg3 maniphestAdapter:(id)arg4 notificationManager:(id)arg5;
- (void)mockSpectaclesErrorStateFirmwareCrash;
- (void)mockSpectaclesErrorStateStorageFull;
- (void)mockSpectaclesErrorStateHighTemp;
- (void)mockSpectaclesErrorStateLowTemp;
- (void)mockSpectaclesErrorStateLowBattery;
- (void)mockDeviceGotUnpaired;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

