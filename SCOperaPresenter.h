//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCOperaPlaylistFetcherDelegate-Protocol.h"
#import "SCOperaPlaylistViewCoordinatorDelegate-Protocol.h"
#import "SCOperaSession-Protocol.h"

@class NSString, SCLoadingIndicatorView, SCOperaConfiguration, SCOperaEventListenerAnnouncer, SCOperaPlaylistPluginsManager, SCOperaPlaylistViewCoordinator, SCOperaViewController, SCOperaViewModel, SCUserSession, UIView, UIViewController;
@protocol SCOperaPlaylistFetcher, SCOperaPresenterDelegate, SCPageNameLogging;

@interface SCOperaPresenter : NSObject <SCOperaPlaylistFetcherDelegate, SCOperaPlaylistViewCoordinatorDelegate, SCOperaSession>
{
    UIViewController<SCPageNameLogging> *_presentingViewController;
    UIView *_baseView;
    _Bool _startWithAttachment;
    unsigned long long _groupDisplaySequence;
    long long _navigationStyle;
    SCOperaPlaylistViewCoordinator *_playlistViewCoordinator;
    SCOperaPlaylistPluginsManager *_playlistPluginManager;
    SCOperaConfiguration *_configuration;
    struct SCOperaPresentingConfig _presentingConfig;
    SCOperaViewController *_operaVC;
    SCOperaEventListenerAnnouncer *_eventAnnouncer;
    SCUserSession *_userSession;
    _Bool _didFinishPresenting;
    _Bool _presentingIsCanceled;
    SCLoadingIndicatorView *_baseViewLoadingIndicatorView;
    _Bool _didFinishPreparingPageForDisplay;
    id <SCOperaPlaylistFetcher> _playlistFetcher;
    SCOperaViewModel *_loadingViewModelForPlaylistFetcher;
    id <SCOperaPresenterDelegate> _delegate;
}

@property(nonatomic) __weak id <SCOperaPresenterDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_removeLoadingIndicator;
- (void)_addLoadingIndicatorToView:(id)arg1;
- (void)_didStartToWaitForFirstPlaylistItemToDisplay;
- (void)loadingStateChanged:(id)arg1;
- (void)playlistViewCoordinator:(id)arg1 didFinishViewingPlaylistGroupDataModel:(id)arg2 nextGroupDataModel:(id)arg3;
- (void)playlistViewCoordinator:(id)arg1 didBeginPlayingPlaylistGroupDataModel:(id)arg2;
- (id)playlistItemGroupDataModels;
- (id)currentPlaylistItemGroupDataModel;
- (void)_updateLoadingViewModelForPlaylistFetcher;
- (_Bool)_playlistFetcherIsInProcess;
- (void)cancelPresentingIfNecessary;
- (void)resumeOpera;
- (void)pauseOpera;
- (void)dismissWithAnimation:(_Bool)arg1;
- (_Bool)isPresentingOtherViewController;
- (_Bool)isPresenting;
- (void)_teardown;
- (void)_sendDidFinishPresentingCallbackIfNecessary;
- (void)operaViewDidSendEvent:(id)arg1 context:(id)arg2 params:(id)arg3;
- (id)registeredEventsForOperaSession;
- (void)_didFailToPresent;
- (void)updatePlaylistWithGroupDataModels:(id)arg1 recommendedStoriesIds:(id)arg2;
- (void)updatePlaylistWithGroupDataModels:(id)arg1;
- (void)updateBaseViewFrame:(struct CGRect)arg1;
- (void)updateBaseView:(id)arg1;
- (_Bool)isPresentingViewingSession;
- (void)_setupDefaultOperaConfigurationWithInitialViewModel:(id)arg1;
- (id)_setupPlaylistViewCoordinatorWithItemGroupDataModels:(id)arg1 firstDisplayGroupDataModel:(id)arg2;
- (void)_playlistItemPreparationCompleted:(_Bool)arg1 mediaNotLoaded:(_Bool)arg2 error:(id)arg3 errorCanSelfRecover:(_Bool)arg4 baseLayerType:(unsigned long long)arg5 fallBackOnLoadingView:(_Bool)arg6 initialViewModel:(id)arg7 animationStyle:(unsigned long long)arg8;
- (void)presentViewingSessionWithDataModels:(id)arg1 firstDisplayGroupDataModel:(id)arg2 playlistPlugins:(id)arg3 baseView:(id)arg4 config:(struct SCOperaPresentingConfig)arg5;
- (void)presentViewingSessionWithPlaylistFetcher:(id)arg1 groupDisplaySequence:(unsigned long long)arg2 playlistPlugins:(id)arg3 baseView:(id)arg4 animationStyle:(unsigned long long)arg5 startWithAttachment:(_Bool)arg6;
- (id)transitionAnimator;
- (void)dealloc;
- (id)initWithPresentingViewController:(id)arg1 userSession:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

