//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NSObject-Protocol.h"

@class NSArray, NSDate, NSSet, NSString, SCSpectaclesCalibration, SCSpectaclesTransferSession, SCSpectaclesWifiController;
@protocol NSCoding, SCSpectaclesContent, SCSpectaclesDataFlowsRequest, SCSpectaclesDevice, SCSpectaclesEventListener, SCSpectaclesFirmwareVersion, SCSpectaclesManagingDeviceList, SCSpectaclesManagingPairing, SCSpectaclesManagingTweaks;

@protocol SCSpectaclesManaging <NSObject>
- (void)wifiControllerDismissWifiView;
- (void)wifiControllerCancelWifiConnection;
- (SCSpectaclesWifiController *)wifiController;
- (id <SCSpectaclesManagingTweaks>)managerTweaks;
- (id <SCSpectaclesManagingPairing>)managerPairing;
- (id <SCSpectaclesManagingDeviceList>)managerDeviceList;
- (void)removeListener:(id <SCSpectaclesEventListener>)arg1;
- (void)addListener:(id <SCSpectaclesEventListener>)arg1;
- (void)setLocationEnabled:(_Bool)arg1 forDevice:(id <SCSpectaclesDevice>)arg2;
- (SCSpectaclesCalibration *)calibrationForSerialNumber:(NSString *)arg1;
- (_Bool)isContentBeingTranferred:(id <SCSpectaclesContent>)arg1 component:(unsigned long long)arg2;
- (_Bool)isContentPartOfCurrentTransferBatch:(id <SCSpectaclesContent>)arg1 component:(unsigned long long)arg2;
- (void)deleteContentWithUUIDs:(NSSet *)arg1;
- (void)setTransferPriorityContext:(unsigned long long)arg1 contentUUIDs:(NSArray *)arg2;
- (SCSpectaclesTransferSession *)currentTransferSession;
- (unsigned long long)numberOfUntransferredHDContentWithDevice:(id <SCSpectaclesDevice>)arg1;
- (NSSet *)unsyncedContentUUIDs;
- (NSArray *)untransferredContentForContentComponent:(unsigned long long)arg1 device:(id <SCSpectaclesDevice>)arg2;
- (NSArray *)transferringContentForContentComponent:(unsigned long long)arg1;
- (NSArray *)content;
- (void)cancelWifiConnection;
- (void)startConnectingWifiForHDFlow:(id <SCSpectaclesDevice>)arg1 ssidPassword:(NSString *)arg2 hdContentUUIDs:(NSArray *)arg3 useAutomaticTransferMode:(_Bool)arg4;
- (void)setCountryCode:(NSString *)arg1;
- (void)initiateDataFlowWithRequest:(id <SCSpectaclesDataFlowsRequest>)arg1;
- (void)markContentAsCorrupt:(NSArray *)arg1;
- (void)markContentAsSynced:(NSArray *)arg1;
- (void)setMinimumRequiredFirmwareVersion:(id <SCSpectaclesFirmwareVersion>)arg1 forHardwareWithMajorNumber:(unsigned long long)arg2;
- (void)cancelFirmwareUpdate:(id <SCSpectaclesDevice>)arg1;
- (void)requestFirmwareUpdate:(id <SCSpectaclesDevice>)arg1 version:(id <SCSpectaclesFirmwareVersion>)arg2 targetDigest:(NSString *)arg3 windowStart:(NSDate *)arg4 windowLength:(double)arg5 userInfo:(id <NSCoding>)arg6;
- (void)requestFirmwareUpdate:(id <SCSpectaclesDevice>)arg1 version:(id <SCSpectaclesFirmwareVersion>)arg2 digest:(NSString *)arg3;
- (void)revertFirmwareBinary:(id <SCSpectaclesDevice>)arg1;
- (void)applyFirmwareUpdatePatch:(id <SCSpectaclesDevice>)arg1 filepath:(NSString *)arg2;
- (void)startFirmwareUpdate:(id <SCSpectaclesDevice>)arg1 updateIsActive:(_Bool)arg2;
- (void)requestLastCloudUploadTime:(id <SCSpectaclesDevice>)arg1;
- (void)setWifiAPList:(NSArray *)arg1 forDevice:(id <SCSpectaclesDevice>)arg2 successBlock:(void (^)(void))arg3 failureBlock:(void (^)(void))arg4;
- (void)requestWifiAPList:(id <SCSpectaclesDevice>)arg1;
- (void)sendAccessTokenForDevice:(id <SCSpectaclesDevice>)arg1 accessToken:(NSString *)arg2 refreshToken:(NSString *)arg3 expirationTimeMs:(long long)arg4 userId:(NSString *)arg5;
- (void)sendAuthzCodeForDevice:(id <SCSpectaclesDevice>)arg1 authzCode:(NSString *)arg2 codeVerifier:(NSString *)arg3 redirectUri:(NSString *)arg4;
- (void)requestClientId:(id <SCSpectaclesDevice>)arg1;
- (void)shareWifiCredentials:(id <SCSpectaclesDevice>)arg1 SSID:(NSString *)arg2 password:(NSString *)arg3;
- (void)cancelShareWifiCredentials:(id <SCSpectaclesDevice>)arg1;
- (void)shareWifiCredentials:(id <SCSpectaclesDevice>)arg1;
- (void)addDeviceIdleAnalyticsRequestForDevice:(id <SCSpectaclesDevice>)arg1 callback:(void (^)(NSArray *, _Bool))arg2;
- (long long)bluetoothState;
- (void)renameDevice:(id <SCSpectaclesDevice>)arg1 newName:(NSString *)arg2;
- (void)clearAllContentOnDevice:(id <SCSpectaclesDevice>)arg1 successBlock:(void (^)(void))arg2 failureBlock:(void (^)(void))arg3;
- (void)resetDevice:(id <SCSpectaclesDevice>)arg1;
- (void)manualUnpairDevice:(id <SCSpectaclesDevice>)arg1 successBlock:(void (^)(void))arg2 failureBlock:(void (^)(void))arg3;
- (void)forgetDevice:(id <SCSpectaclesDevice>)arg1;
- (void)deactivateDevice:(id <SCSpectaclesDevice>)arg1;
- (void)activateDevice:(id <SCSpectaclesDevice>)arg1;
- (void)setPairingDeviceLocationEnabled:(_Bool)arg1;
- (void)setPairingDeviceName:(NSString *)arg1;
- (NSString *)pairingDeviceEmoji;
- (NSString *)pairingDeviceNameWithoutEmoji;
- (void)clearCacheExceptForCurrentUser;
- (NSArray *)devices;
- (void)reconcileDevicesFromServer:(NSArray *)arg1;
- (void)confirmKeepPreviousDevicePaired;
- (void)confirmUnpairPreviousDevice;
- (void)cancelSearchForNewDevices;
- (void)startSearchForNewDevicesWithUserDisplayName:(NSString *)arg1;
@end

