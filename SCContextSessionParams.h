//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCopying-Protocol.h"
#import "SCContextDataProviding-Protocol.h"

@class NSString, SCCTXContextClientInfo, SCContextV3StoryParams, SCLensSbSnappableMessage, SCStoriesSnapPlaybackMetadata;

@interface SCContextSessionParams : NSObject <SCContextDataProviding, NSCopying>
{
    _Bool _replyEnabled;
    _Bool _isContextDisabled;
    _Bool _showSnapProPublicStoryReplyDisclaimer;
    int _launchSource;
    NSString *_venueId;
    NSString *_attachmentUrl;
    NSString *_contentUsername;
    NSString *_lensId;
    SCLensSbSnappableMessage *_lensMetadata;
    NSString *_filterId;
    SCCTXContextClientInfo *_contextClientInfo;
    NSString *_unlockablesSnapInfo;
    NSString *_displayName;
    SCContextV3StoryParams *_storyParams;
    SCStoriesSnapPlaybackMetadata *_storySnap;
    long long _storyType;
    long long _storyTypeSpecific;
    NSString *_storyId;
    NSString *_storySnapId;
    NSString *_chatMessageId;
    long long _chatMediaType;
    long long _unifiedMediaType;
    NSString *_oneOnOneConversationId;
    NSString *_groupChatConversationId;
    NSString *_chatSenderUsername;
    NSString *_singleRecipientDisplayName;
    NSString *_teamSnapchatMassSnapIdHash;
}

+ (id)paramsWithDiscoverChunk:(id)arg1 properties:(id)arg2;
+ (id)paramsWithChatMedia:(id)arg1 message:(id)arg2 properties:(id)arg3;
+ (id)paramsWithStorySnapMedia:(id)arg1 properties:(id)arg2;
+ (id)paramsWithStorySnap:(id)arg1 storiesPlaybackSequence:(id)arg2 customStoryMetadata:(id)arg3 myUsername:(id)arg4 properties:(id)arg5 isStoryShare:(_Bool)arg6;
+ (id)paramsWithStory:(id)arg1 friendStories:(id)arg2 properties:(id)arg3 isStoryShare:(_Bool)arg4;
@property(readonly, nonatomic) _Bool showSnapProPublicStoryReplyDisclaimer; // @synthesize showSnapProPublicStoryReplyDisclaimer=_showSnapProPublicStoryReplyDisclaimer;
@property(readonly, copy, nonatomic) NSString *teamSnapchatMassSnapIdHash; // @synthesize teamSnapchatMassSnapIdHash=_teamSnapchatMassSnapIdHash;
@property(readonly, copy, nonatomic) NSString *singleRecipientDisplayName; // @synthesize singleRecipientDisplayName=_singleRecipientDisplayName;
@property(readonly, copy, nonatomic) NSString *chatSenderUsername; // @synthesize chatSenderUsername=_chatSenderUsername;
@property(readonly, copy, nonatomic) NSString *groupChatConversationId; // @synthesize groupChatConversationId=_groupChatConversationId;
@property(readonly, copy, nonatomic) NSString *oneOnOneConversationId; // @synthesize oneOnOneConversationId=_oneOnOneConversationId;
@property(readonly, nonatomic) long long unifiedMediaType; // @synthesize unifiedMediaType=_unifiedMediaType;
@property(readonly, nonatomic) long long chatMediaType; // @synthesize chatMediaType=_chatMediaType;
@property(readonly, copy, nonatomic) NSString *chatMessageId; // @synthesize chatMessageId=_chatMessageId;
@property(readonly, copy, nonatomic) NSString *storySnapId; // @synthesize storySnapId=_storySnapId;
@property(readonly, copy, nonatomic) NSString *storyId; // @synthesize storyId=_storyId;
@property(readonly, nonatomic) long long storyTypeSpecific; // @synthesize storyTypeSpecific=_storyTypeSpecific;
@property(readonly, nonatomic) long long storyType; // @synthesize storyType=_storyType;
@property(readonly, copy, nonatomic) SCStoriesSnapPlaybackMetadata *storySnap; // @synthesize storySnap=_storySnap;
@property(readonly, copy, nonatomic) SCContextV3StoryParams *storyParams; // @synthesize storyParams=_storyParams;
@property(readonly, nonatomic) int launchSource; // @synthesize launchSource=_launchSource;
@property(readonly, copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, copy, nonatomic) NSString *unlockablesSnapInfo; // @synthesize unlockablesSnapInfo=_unlockablesSnapInfo;
@property(readonly, copy, nonatomic) SCCTXContextClientInfo *contextClientInfo; // @synthesize contextClientInfo=_contextClientInfo;
@property(readonly, copy, nonatomic) NSString *filterId; // @synthesize filterId=_filterId;
@property(readonly, copy, nonatomic) SCLensSbSnappableMessage *lensMetadata; // @synthesize lensMetadata=_lensMetadata;
@property(readonly, copy, nonatomic) NSString *lensId; // @synthesize lensId=_lensId;
@property(readonly, copy, nonatomic) NSString *contentUsername; // @synthesize contentUsername=_contentUsername;
@property(readonly, copy, nonatomic) NSString *attachmentUrl; // @synthesize attachmentUrl=_attachmentUrl;
@property(readonly, copy, nonatomic) NSString *venueId; // @synthesize venueId=_venueId;
@property(readonly, nonatomic) _Bool isContextDisabled; // @synthesize isContextDisabled=_isContextDisabled;
@property(readonly, nonatomic) _Bool replyEnabled; // @synthesize replyEnabled=_replyEnabled;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithReplyEnabled:(_Bool)arg1 isContextDisabled:(_Bool)arg2 venueId:(id)arg3 attachmentUrl:(id)arg4 contentUsername:(id)arg5 lensId:(id)arg6 lensMetadata:(id)arg7 filterId:(id)arg8 contextClientInfo:(id)arg9 unlockablesSnapInfo:(id)arg10 displayName:(id)arg11 launchSource:(int)arg12 storyParams:(id)arg13 storySnap:(id)arg14 storyType:(long long)arg15 storyTypeSpecific:(long long)arg16 storyId:(id)arg17 storySnapId:(id)arg18 chatMessageId:(id)arg19 chatMediaType:(long long)arg20 unifiedMediaType:(long long)arg21 oneOnOneConversationId:(id)arg22 groupChatConversationId:(id)arg23 chatSenderUsername:(id)arg24 singleRecipientDisplayName:(id)arg25 teamSnapchatMassSnapIdHash:(id)arg26 showSnapProPublicStoryReplyDisclaimer:(_Bool)arg27;
- (_Bool)isDirectOrGroupSnap;
- (_Bool)isGroupMessage;
- (void)setContextProperties:(id)arg1;
- (id)teamSnapchatIdHash;
- (id)conversationId;
- (id)groupConversationId;
- (id)replyUsername;
- (int)_snapViewingContext;
- (id)replyInfo;
- (id)snapIdentity;
- (id)snapContextInfo;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

