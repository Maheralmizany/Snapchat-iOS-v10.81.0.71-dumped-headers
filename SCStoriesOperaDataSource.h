//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCDataCoordinatorListener-Protocol.h"
#import "SCOperaPlaylistDataSource-Protocol.h"
#import "SCOperaPlaylistItemExtraPropertiesProvider-Protocol.h"
#import "SCOperaPrefetchRequestHandling-Protocol.h"
#import "SCOperaSession-Protocol.h"
#import "SCSingleStoryOperaDataSourceDelegate-Protocol.h"
#import "SCTraceEnabled-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSString, SCOperaEventListenerAnnouncer, SCOperaPerformanceTrackingPlugin, SCSearchFriendProvider, SCStoriesMediaFetcher, SCStoriesOperaMediaManager, SCStoriesSnapPlaybackMetadata, SCStreamingResourceLoader, SCUserSession;
@protocol SCOperaLabelTextProvider, SCOperaPlaylistItemController, SCOperaViewModelConnectionsCallbackControlling, SCOperaViewProvider, SCStoriesMediaCoordinating, SCStoriesOperaDataSourceDelegate, SCStoriesPlaybackDataProviding;

@interface SCStoriesOperaDataSource : NSObject <SCSingleStoryOperaDataSourceDelegate, SCTraceEnabled, SCOperaSession, SCDataCoordinatorListener, SCOperaPlaylistDataSource, SCOperaPlaylistItemExtraPropertiesProvider, SCOperaPrefetchRequestHandling>
{
    SCStreamingResourceLoader *_streamingResourceLoader;
    id <SCStoriesPlaybackDataProviding> _storiesPlaybackDataProvider;
    id <SCStoriesMediaCoordinating> _storiesMediaCoordinator;
    SCStoriesMediaFetcher *_storiesMediaFetcher;
    long long _viewLocation;
    SCStoriesSnapPlaybackMetadata *_currentStorySnap;
    NSMutableDictionary *_identifierToPlayableDataModel;
    NSMutableDictionary *_injectedFriendNameToFriendStories;
    _Bool _shouldLoadStoriesWhenMediaStartsToPlay;
    NSMutableArray *_fetchedLoadingBackgroundImageStories;
    NSMutableDictionary *_identifierToIndividualDataSource;
    NSMutableDictionary *_publicationIdToIdentifier;
    SCOperaPerformanceTrackingPlugin *_performanceTrackingPlugin;
    _Bool _disableInfiniteSwipeBack;
    SCUserSession *_userSession;
    id <SCOperaViewProvider> _chromeAvatarProvider;
    id <SCOperaLabelTextProvider> _groupChatTitleProvider;
    NSString *_type;
    _Bool _enableCriticalModeWhenLoading;
    _Bool _showViewersTable;
    id <SCStoriesOperaDataSourceDelegate> _delegate;
    SCStoriesOperaMediaManager *_storiesMediaManager;
    id <SCOperaViewModelConnectionsCallbackControlling> _viewModelConnectionsCallbackController;
    SCSearchFriendProvider *_friendProvider;
    id <SCOperaPlaylistItemController> _playlistItemController;
    long long _viewingType;
    SCOperaEventListenerAnnouncer *_eventAnnouncer;
}

@property(retain, nonatomic) SCOperaEventListenerAnnouncer *eventAnnouncer; // @synthesize eventAnnouncer=_eventAnnouncer;
@property(nonatomic) long long viewingType; // @synthesize viewingType=_viewingType;
@property(nonatomic) _Bool showViewersTable; // @synthesize showViewersTable=_showViewersTable;
@property(nonatomic) __weak id <SCOperaPlaylistItemController> playlistItemController; // @synthesize playlistItemController=_playlistItemController;
@property(retain, nonatomic) SCSearchFriendProvider *friendProvider; // @synthesize friendProvider=_friendProvider;
@property(readonly, nonatomic) _Bool enableCriticalModeWhenLoading; // @synthesize enableCriticalModeWhenLoading=_enableCriticalModeWhenLoading;
@property(nonatomic) __weak id <SCOperaViewModelConnectionsCallbackControlling> viewModelConnectionsCallbackController; // @synthesize viewModelConnectionsCallbackController=_viewModelConnectionsCallbackController;
@property(readonly, nonatomic) SCStoriesOperaMediaManager *storiesMediaManager; // @synthesize storiesMediaManager=_storiesMediaManager;
@property(nonatomic) __weak id <SCStoriesOperaDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)prefetchPlaylistItem:(id)arg1;
- (id)prefetchRequestType;
- (void)_inlineLoadStoryPlaybacks:(id)arg1 startIndex:(unsigned long long)arg2 viewingType:(long long)arg3;
- (id)_nameListFromOperaPlaylist;
- (void)_preloadFriendStoriesBasedOnPlaylistWithCurrentStoryPlaybacks:(id)arg1;
- (void)_loadNextStoriesWithCurrentStorySnap:(id)arg1;
- (void)_loadStoriesIfNecessaryWhenStartToPlayStorySnap:(id)arg1;
- (void)_loadStoriesIfNecessaryWhenStartToViewStorySnap:(id)arg1;
- (void)operaViewDidSendEvent:(id)arg1 context:(id)arg2 params:(id)arg3;
- (id)registeredEventsForOperaSession;
- (void)removeMediaForItem:(id)arg1;
- (void)prepareMediaForItem:(id)arg1 waitForDownloading:(_Bool)arg2 startWaitingForDownloadCallback:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)extraPropertiesForDataModel:(id)arg1 item:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)pagesPropertiesForDataModel:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)teardownDataModelForItem:(id)arg1;
- (id)_storySnapForItem:(id)arg1;
- (id)_storyPlaybackSequenceForIdentifier:(id)arg1;
- (id)dataModelForGroup:(id)arg1;
- (id)dataModelForItem:(id)arg1;
- (id)_friendStoriesDataSourceForUsername:(id)arg1;
- (void)loadMediaForPlaylistItemGroup:(id)arg1;
- (void)unresolvePlaylistItemGroup:(id)arg1;
- (void)resolvePlaylistItemGroup:(id)arg1;
- (_Bool)needToPrepareMediaBeforeDisplay;
- (id)_resolveDataModelToPlaylistItemGroupId:(id)arg1;
- (id)_playlistGroupContextForViewLocation:(long long)arg1;
- (id)playlistItemGroupForDataModel:(id)arg1;
- (_Bool)canResolvePlaylistItemGroupDataModel:(id)arg1;
- (id)mediaManager;
- (id)initWithViewingType:(long long)arg1 userSession:(id)arg2 storiesPlaybackDataProvider:(id)arg3 storiesMediaCoordinator:(id)arg4 viewLocation:(long long)arg5 type:(id)arg6;
- (id)_friendStoriesDataSourceForStorySnap:(id)arg1;
- (void)requestCallbackWhenViewModelConnectionIsStable:(CDUnknownBlockType)arg1;
- (void)removeInjectedFriendStories:(id)arg1;
- (void)injectFriendStories:(id)arg1;
- (void)injectStory:(id)arg1 afterStory:(id)arg2;
- (void)_updateFriendsListWhenOperaPlaylistEnabled:(id)arg1;
- (void)updateFriendsList:(id)arg1;
- (void)dataCoordinatorDidUpdateWithIdentifier:(id)arg1 dataRequest:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

