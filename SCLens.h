//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCoding-Protocol.h"
#import "NSCopying-Protocol.h"

@class NSArray, NSData, NSDate, NSDictionary, NSSet, NSString, SCCommunityLensData, SCLensResourceContainer, SOJUSponsoredSlug, SOJUUnlockableTrackInfo, SOJUUnlockablesAttachment;

@interface SCLens : NSObject <NSCopying, NSCoding>
{
    _Bool _isFeatured;
    _Bool _isSponsored;
    _Bool _isDemo;
    _Bool _isThirdParty;
    _Bool _isStudioPreview;
    _Bool _hasContextCards;
    _Bool _isRanked;
    _Bool _isLeftCarousel;
    _Bool _isCommunity;
    NSString *_lensId;
    NSString *_name;
    NSString *_code;
    NSString *_hintId;
    NSDictionary *_hintTranslations;
    NSString *_iconURL;
    NSString *_filterOverlayImageURL;
    NSString *_bitmojiComicId;
    SCLensResourceContainer *_resourceContainer;
    NSDate *_expirationDate;
    long long _type;
    long long _section;
    NSArray *_categories;
    SOJUSponsoredSlug *_sponsoredSlug;
    NSArray *_scheduleIntervals;
    NSDate *_demoStartDate;
    long long _absoluteCarouselPosition;
    SOJUUnlockableTrackInfo *_unlockableTrackInfo;
    NSArray *_manifest;
    long long _activationCameraPosition;
    NSString *_encryptedGeoData;
    NSString *_unlockCompanionBackReferenceId;
    NSSet *_cameraContexts;
    NSSet *_applicableContexts;
    NSString *_onDemandTemplateId;
    SOJUUnlockablesAttachment *_unlockablesAttachment;
    long long _priority;
    NSArray *_lensDescriptors;
    SCCommunityLensData *_communityLensData;
    long long _snappablesReplyType;
    NSString *_snappablesTaglineKey;
    NSArray *_snappablesPlayButtonGradientColors;
    NSString *_contextHint;
    NSData *_checksum;
}

+ (void)initialize;
+ (void)resetRequiredAssetCache;
+ (void)resetFilterOverlayImagePathCache;
+ (void)resetImageCache;
+ (void)resetContentPathCache;
+ (id)_cacheKeyForLensAsset:(id)arg1;
+ (void)cacheRequiredAssetPath:(id)arg1 forLensAsset:(id)arg2;
+ (void)cacheFilterOverlayImagePath:(id)arg1 forLens:(id)arg2;
+ (void)cacheImage:(id)arg1 forLens:(id)arg2;
+ (void)cacheContentPath:(id)arg1 forLens:(id)arg2;
+ (id)studioLensMetadataFromContentPath:(id)arg1;
+ (id)applicableContextForCreative;
+ (id)applicableContextForSnap3D;
+ (id)applicableContextForReplyToSnap;
+ (id)applicableContextForReplyOnStory;
+ (id)applicableContextForNewport;
+ (id)applicableContextForSpectacles;
+ (id)applicableContextForAdToLens;
+ (id)applicableContextForMemories;
+ (id)applicableContextForPreviewNoFace;
+ (id)applicableContextForPreview;
+ (id)applicableContextForVideoChat;
+ (id)applicableContextForReplyCamera;
+ (id)applicableContextForLiveCamera;
+ (id)contextForRearFacingCamera;
+ (id)contextForFrontFacingCamera;
+ (long long)lensTypeFromLensType:(long long)arg1;
+ (long long)lensSourceFromApplicableContext:(id)arg1;
+ (id)_placeholderImage;
+ (id)placeholderImage;
+ (id)placeholderImageFuture;
+ (id)placeholderUnlockedLensWithLensId:(id)arg1 iconUrl:(id)arg2;
+ (id)unavailableLensWithLens:(id)arg1 lensIconInMemoryCache:(id)arg2;
@property(readonly, copy, nonatomic) NSData *checksum; // @synthesize checksum=_checksum;
@property(readonly, nonatomic) _Bool isCommunity; // @synthesize isCommunity=_isCommunity;
@property(readonly, copy, nonatomic) NSString *contextHint; // @synthesize contextHint=_contextHint;
@property(readonly, nonatomic) _Bool isLeftCarousel; // @synthesize isLeftCarousel=_isLeftCarousel;
@property(readonly, copy, nonatomic) NSArray *snappablesPlayButtonGradientColors; // @synthesize snappablesPlayButtonGradientColors=_snappablesPlayButtonGradientColors;
@property(readonly, copy, nonatomic) NSString *snappablesTaglineKey; // @synthesize snappablesTaglineKey=_snappablesTaglineKey;
@property(readonly, nonatomic) long long snappablesReplyType; // @synthesize snappablesReplyType=_snappablesReplyType;
@property(readonly, copy, nonatomic) SCCommunityLensData *communityLensData; // @synthesize communityLensData=_communityLensData;
@property(readonly, copy, nonatomic) NSArray *lensDescriptors; // @synthesize lensDescriptors=_lensDescriptors;
@property(readonly, nonatomic) long long priority; // @synthesize priority=_priority;
@property(readonly, nonatomic) _Bool isRanked; // @synthesize isRanked=_isRanked;
@property(readonly, copy, nonatomic) SOJUUnlockablesAttachment *unlockablesAttachment; // @synthesize unlockablesAttachment=_unlockablesAttachment;
@property(readonly, copy, nonatomic) NSString *onDemandTemplateId; // @synthesize onDemandTemplateId=_onDemandTemplateId;
@property(readonly, nonatomic) _Bool hasContextCards; // @synthesize hasContextCards=_hasContextCards;
@property(readonly, copy, nonatomic) NSSet *applicableContexts; // @synthesize applicableContexts=_applicableContexts;
@property(readonly, copy, nonatomic) NSSet *cameraContexts; // @synthesize cameraContexts=_cameraContexts;
@property(readonly, copy, nonatomic) NSString *unlockCompanionBackReferenceId; // @synthesize unlockCompanionBackReferenceId=_unlockCompanionBackReferenceId;
@property(readonly, copy, nonatomic) NSString *encryptedGeoData; // @synthesize encryptedGeoData=_encryptedGeoData;
@property(readonly, nonatomic) long long activationCameraPosition; // @synthesize activationCameraPosition=_activationCameraPosition;
@property(readonly, nonatomic) _Bool isStudioPreview; // @synthesize isStudioPreview=_isStudioPreview;
@property(readonly, nonatomic) _Bool isThirdParty; // @synthesize isThirdParty=_isThirdParty;
@property(readonly, copy, nonatomic) NSArray *manifest; // @synthesize manifest=_manifest;
@property(readonly, copy, nonatomic) SOJUUnlockableTrackInfo *unlockableTrackInfo; // @synthesize unlockableTrackInfo=_unlockableTrackInfo;
@property(readonly, nonatomic) long long absoluteCarouselPosition; // @synthesize absoluteCarouselPosition=_absoluteCarouselPosition;
@property(readonly, copy, nonatomic) NSDate *demoStartDate; // @synthesize demoStartDate=_demoStartDate;
@property(readonly, nonatomic) _Bool isDemo; // @synthesize isDemo=_isDemo;
@property(readonly, copy, nonatomic) NSArray *scheduleIntervals; // @synthesize scheduleIntervals=_scheduleIntervals;
@property(readonly, copy, nonatomic) SOJUSponsoredSlug *sponsoredSlug; // @synthesize sponsoredSlug=_sponsoredSlug;
@property(readonly, nonatomic) _Bool isSponsored; // @synthesize isSponsored=_isSponsored;
@property(readonly, nonatomic) _Bool isFeatured; // @synthesize isFeatured=_isFeatured;
@property(readonly, copy, nonatomic) NSArray *categories; // @synthesize categories=_categories;
@property(readonly, nonatomic) long long section; // @synthesize section=_section;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, copy, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
@property(readonly, copy, nonatomic) SCLensResourceContainer *resourceContainer; // @synthesize resourceContainer=_resourceContainer;
@property(readonly, copy, nonatomic) NSString *bitmojiComicId; // @synthesize bitmojiComicId=_bitmojiComicId;
@property(readonly, copy, nonatomic) NSString *filterOverlayImageURL; // @synthesize filterOverlayImageURL=_filterOverlayImageURL;
@property(readonly, copy, nonatomic) NSString *iconURL; // @synthesize iconURL=_iconURL;
@property(readonly, copy, nonatomic) NSDictionary *hintTranslations; // @synthesize hintTranslations=_hintTranslations;
@property(readonly, copy, nonatomic) NSString *hintId; // @synthesize hintId=_hintId;
@property(readonly, copy, nonatomic) NSString *code; // @synthesize code=_code;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, copy, nonatomic) NSString *lensId; // @synthesize lensId=_lensId;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLensId:(id)arg1 name:(id)arg2 code:(id)arg3 hintId:(id)arg4 hintTranslations:(id)arg5 iconURL:(id)arg6 filterOverlayImageURL:(id)arg7 bitmojiComicId:(id)arg8 resourceContainer:(id)arg9 expirationDate:(id)arg10 type:(long long)arg11 section:(long long)arg12 categories:(id)arg13 isFeatured:(_Bool)arg14 isSponsored:(_Bool)arg15 sponsoredSlug:(id)arg16 scheduleIntervals:(id)arg17 isDemo:(_Bool)arg18 demoStartDate:(id)arg19 absoluteCarouselPosition:(long long)arg20 unlockableTrackInfo:(id)arg21 manifest:(id)arg22 isThirdParty:(_Bool)arg23 isStudioPreview:(_Bool)arg24 activationCameraPosition:(long long)arg25 encryptedGeoData:(id)arg26 unlockCompanionBackReferenceId:(id)arg27 cameraContexts:(id)arg28 applicableContexts:(id)arg29 hasContextCards:(_Bool)arg30 onDemandTemplateId:(id)arg31 unlockablesAttachment:(id)arg32 isRanked:(_Bool)arg33 priority:(long long)arg34 lensDescriptors:(id)arg35 communityLensData:(id)arg36 snappablesReplyType:(long long)arg37 snappablesTaglineKey:(id)arg38 snappablesPlayButtonGradientColors:(id)arg39 isLeftCarousel:(_Bool)arg40 contextHint:(id)arg41 isCommunity:(_Bool)arg42 checksum:(id)arg43;
- (id)initWithCoder:(id)arg1;
@property(readonly, nonatomic) _Bool isLoadingPlaceholderLens;
@property(readonly, nonatomic) _Bool isFeedLens;
@property(readonly, nonatomic) _Bool isCreateYourOwnLens;
@property(readonly, nonatomic) _Bool isReplyWithLensOriginalLens;
@property(readonly, nonatomic) _Bool isVideoChatOriginalLens;
@property(readonly, nonatomic) _Bool isOnDemandAddNewLens;
@property(readonly, nonatomic) _Bool isPlaceholderLens;
@property(readonly, nonatomic) _Bool isOriginalLens;
@property(readonly, nonatomic) _Bool isDummyLens;
@property(readonly, nonatomic) _Bool canAppearInLensCarousel;
@property(readonly, nonatomic) _Bool supportsDepth;
@property(readonly, nonatomic) _Bool isWorldLensInPostCapture;
@property(readonly, nonatomic, getter=isOnDemandLensOnCamera) _Bool onDemandLensOnCamera;
@property(readonly, nonatomic) _Bool isPostCaptureExclusive;
@property(readonly, nonatomic) _Bool requiresFriendmoji;
@property(readonly, nonatomic) _Bool requiresBitmoji;
@property(readonly, nonatomic) _Bool isMemoriesInteractive;
@property(readonly, nonatomic) NSString *snappableLocalizedTagLine;
@property(readonly, nonatomic) NSString *snappableDisplayName;
@property(readonly, nonatomic) _Bool isSnappableSocialUnlocked;
@property(readonly, nonatomic) _Bool isSnappable;
- (id)filterOverlayImagePathCacheKey;
@property(readonly, nonatomic) NSString *filterOverlayImagePath;
@property(readonly, nonatomic) NSString *imageCacheKey;
- (id)image;
- (id)contentCacheKey;
- (void)fillCacheForBundledLens;
@property(readonly, nonatomic) NSString *contentPath;
@property(readonly, nonatomic) _Bool belongsToForceDownloadCategory;
@property(readonly, nonatomic) _Bool isAvailableForPrefetch;
- (_Bool)areAllRequiredAssetsFetched;
@property(readonly, nonatomic) _Bool isFetched;
- (_Bool)isBundleFetched;
@property(readonly, nonatomic) _Bool isFetchable;
- (_Bool)isUnavailableLens;
@property(nonatomic) _Bool shouldForceReload;
- (void)extraLensPushedDate:(CDUnknownBlockType)arg1;
- (_Bool)shouldPrefetchForInactiveLensUserWithLensUser:(id)arg1;
- (_Bool)isNewUserWelcomeLensWithLensUser:(id)arg1;
- (id)effectInfoWithLaunchMetadata:(id)arg1;
- (id)_lensIconWithInMemoryCache:(id)arg1;
@property(readonly, nonatomic) _Bool hasEmptyIcon;
- (id)lensIconWithInMemoryCache:(id)arg1;
- (id)lensIconFutureWithInMemoryCache:(id)arg1;
@property(readonly, nonatomic) unsigned long long subscribeAction;
@property(readonly, nonatomic) _Bool isTypeUnlocked;
- (_Bool)isCreativeLens;
- (_Bool)supportsInteractiveSnap;
- (_Bool)supportsInteractiveSnapWithDepth;

@end

