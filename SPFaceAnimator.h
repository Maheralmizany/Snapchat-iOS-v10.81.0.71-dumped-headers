//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "AIFKVONSObject.h"

#import "SPFaceAnimatorConsumerDelegate-Protocol.h"

@class F2FWarpingProcessor, NSArray, NSDate, NSError, NSNumber, NSObject, NSProgress, NSString, NSTimer, SPApplicationStateHolder, SPFramesProfiler, SPProcessorsManager, SPScenario, SPSharedQueuesHolder, SPThreadSafeMutableContainer, SPThreadSafeMutableDictionary, SPWarpingBeautificationCache;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_semaphore, SPAnalytics, SPFaceAnimatorConsumer, SPFaceAnimatorDelegate, SPLogger, SPSettings, SPStringsProvider;

@interface SPFaceAnimator : AIFKVONSObject <SPFaceAnimatorConsumerDelegate>
{
    _Bool _isErrorFatal;
    _Bool _cancelled;
    _Bool _startProcessNotificationPosted;
    _Bool _isPreparedToStart;
    _Bool _isBuffersInitialized;
    _Bool _isWarpingProcessorPreloadStartCalled;
    _Bool _isWarpingProcessorProcessStartCalled;
    _Bool _isPaused;
    _Bool _isRGBA;
    _Bool _isLensBeautificationUsed;
    id <SPAnalytics> _analytics;
    id <SPSettings> _settings;
    SPApplicationStateHolder *_applicationStateHolder;
    SPSharedQueuesHolder *_sharedQueuesHolder;
    SPProcessorsManager *_processorsManager;
    SPWarpingBeautificationCache *_warpingBeautificationCache;
    id <SPLogger> _logger;
    id <SPStringsProvider> _stringsProvider;
    id <SPFaceAnimatorDelegate> _delegate;
    id <SPFaceAnimatorConsumer> _consumer;
    unsigned long long _status;
    NSError *_error;
    long long _progressFrameIndex;
    long long _progressTotalFramesCount;
    NSProgress *_progress;
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _frameProgressBlock;
    unsigned long long _maxInputBufferSize;
    SPFramesProfiler *_framesProfiler;
    NSArray *_persons;
    SPScenario *_scenario;
    NSString *_resourcesFilePath;
    unsigned long long _totalFramesCount;
    unsigned long long _processingThreads;
    unsigned long long _renderingThreads;
    unsigned long long _maxPreloadCount;
    NSObject<OS_dispatch_queue> *_controlPrepareQueue;
    NSObject<OS_dispatch_queue> *_controlProcessQueue;
    NSObject<OS_dispatch_semaphore> *_mainProcessingLoopSemaphore;
    NSObject<OS_dispatch_semaphore> *_restartSemaphore;
    NSObject<OS_dispatch_queue> *_prepareQueue;
    NSObject<OS_dispatch_group> *_prepareGroup;
    NSObject<OS_dispatch_queue> *_getFrameDescriptionQueue;
    NSObject<OS_dispatch_queue> *_prepareAndRenderFrameQueue;
    NSObject<OS_dispatch_semaphore> *_renderingFrameSemaphore;
    NSObject<OS_dispatch_semaphore> *_glProcessingSemaphore;
    NSObject<OS_dispatch_queue> *_preloadingFrameQueue;
    NSObject<OS_dispatch_queue> *_writingFrameQueue;
    NSObject<OS_dispatch_queue> *_releaseQueue;
    F2FWarpingProcessor *_warpingProcessor;
    SPThreadSafeMutableContainer *_processedFramesBuffer;
    double _totalCompressionTime;
    double _totalWarpingTime;
    double _totalReadingTime;
    double _totalWritingTime;
    unsigned long long _currentWritingFrameIndex;
    unsigned long long _currentReadingFrameIndex;
    SPThreadSafeMutableDictionary *_framesProfilingDict;
    NSDate *_startVideoWritingDate;
    NSTimer *_resumeTimer;
    double _totalVideoWritingTime;
    NSNumber *_preparingTime;
}

@property(nonatomic) _Bool isLensBeautificationUsed; // @synthesize isLensBeautificationUsed=_isLensBeautificationUsed;
@property(nonatomic) _Bool isRGBA; // @synthesize isRGBA=_isRGBA;
@property(retain, nonatomic) NSNumber *preparingTime; // @synthesize preparingTime=_preparingTime;
@property(nonatomic) double totalVideoWritingTime; // @synthesize totalVideoWritingTime=_totalVideoWritingTime;
@property(retain, nonatomic) NSTimer *resumeTimer; // @synthesize resumeTimer=_resumeTimer;
@property _Bool isPaused; // @synthesize isPaused=_isPaused;
@property _Bool isWarpingProcessorProcessStartCalled; // @synthesize isWarpingProcessorProcessStartCalled=_isWarpingProcessorProcessStartCalled;
@property _Bool isWarpingProcessorPreloadStartCalled; // @synthesize isWarpingProcessorPreloadStartCalled=_isWarpingProcessorPreloadStartCalled;
@property _Bool isBuffersInitialized; // @synthesize isBuffersInitialized=_isBuffersInitialized;
@property(retain, nonatomic) NSDate *startVideoWritingDate; // @synthesize startVideoWritingDate=_startVideoWritingDate;
@property(nonatomic) _Bool isPreparedToStart; // @synthesize isPreparedToStart=_isPreparedToStart;
@property(retain, nonatomic) SPThreadSafeMutableDictionary *framesProfilingDict; // @synthesize framesProfilingDict=_framesProfilingDict;
@property(nonatomic) unsigned long long currentReadingFrameIndex; // @synthesize currentReadingFrameIndex=_currentReadingFrameIndex;
@property(nonatomic) unsigned long long currentWritingFrameIndex; // @synthesize currentWritingFrameIndex=_currentWritingFrameIndex;
@property(nonatomic) double totalWritingTime; // @synthesize totalWritingTime=_totalWritingTime;
@property(nonatomic) double totalReadingTime; // @synthesize totalReadingTime=_totalReadingTime;
@property(nonatomic) double totalWarpingTime; // @synthesize totalWarpingTime=_totalWarpingTime;
@property(nonatomic) double totalCompressionTime; // @synthesize totalCompressionTime=_totalCompressionTime;
@property(retain, nonatomic) SPThreadSafeMutableContainer *processedFramesBuffer; // @synthesize processedFramesBuffer=_processedFramesBuffer;
@property(retain, nonatomic) F2FWarpingProcessor *warpingProcessor; // @synthesize warpingProcessor=_warpingProcessor;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *releaseQueue; // @synthesize releaseQueue=_releaseQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *writingFrameQueue; // @synthesize writingFrameQueue=_writingFrameQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *preloadingFrameQueue; // @synthesize preloadingFrameQueue=_preloadingFrameQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *glProcessingSemaphore; // @synthesize glProcessingSemaphore=_glProcessingSemaphore;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *renderingFrameSemaphore; // @synthesize renderingFrameSemaphore=_renderingFrameSemaphore;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *prepareAndRenderFrameQueue; // @synthesize prepareAndRenderFrameQueue=_prepareAndRenderFrameQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *getFrameDescriptionQueue; // @synthesize getFrameDescriptionQueue=_getFrameDescriptionQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *prepareGroup; // @synthesize prepareGroup=_prepareGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *prepareQueue; // @synthesize prepareQueue=_prepareQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *restartSemaphore; // @synthesize restartSemaphore=_restartSemaphore;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *mainProcessingLoopSemaphore; // @synthesize mainProcessingLoopSemaphore=_mainProcessingLoopSemaphore;
@property(nonatomic) _Bool startProcessNotificationPosted; // @synthesize startProcessNotificationPosted=_startProcessNotificationPosted;
@property _Bool cancelled; // @synthesize cancelled=_cancelled;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *controlProcessQueue; // @synthesize controlProcessQueue=_controlProcessQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *controlPrepareQueue; // @synthesize controlPrepareQueue=_controlPrepareQueue;
@property(readonly, nonatomic) unsigned long long maxPreloadCount; // @synthesize maxPreloadCount=_maxPreloadCount;
@property(readonly, nonatomic) unsigned long long renderingThreads; // @synthesize renderingThreads=_renderingThreads;
@property(readonly, nonatomic) unsigned long long processingThreads; // @synthesize processingThreads=_processingThreads;
@property(nonatomic) unsigned long long totalFramesCount; // @synthesize totalFramesCount=_totalFramesCount;
@property(readonly, copy, nonatomic) NSString *resourcesFilePath; // @synthesize resourcesFilePath=_resourcesFilePath;
@property(readonly, nonatomic) SPScenario *scenario; // @synthesize scenario=_scenario;
@property(readonly, nonatomic) NSArray *persons; // @synthesize persons=_persons;
@property(retain, nonatomic) SPFramesProfiler *framesProfiler; // @synthesize framesProfiler=_framesProfiler;
@property(nonatomic) unsigned long long maxInputBufferSize; // @synthesize maxInputBufferSize=_maxInputBufferSize;
@property(copy, nonatomic) CDUnknownBlockType frameProgressBlock; // @synthesize frameProgressBlock=_frameProgressBlock;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(readonly, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
@property(nonatomic) long long progressTotalFramesCount; // @synthesize progressTotalFramesCount=_progressTotalFramesCount;
@property(nonatomic) long long progressFrameIndex; // @synthesize progressFrameIndex=_progressFrameIndex;
@property(nonatomic) _Bool isErrorFatal; // @synthesize isErrorFatal=_isErrorFatal;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) unsigned long long status; // @synthesize status=_status;
@property(readonly, nonatomic) id <SPFaceAnimatorConsumer> consumer; // @synthesize consumer=_consumer;
@property(nonatomic) __weak id <SPFaceAnimatorDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id <SPStringsProvider> stringsProvider; // @synthesize stringsProvider=_stringsProvider;
@property(retain, nonatomic) id <SPLogger> logger; // @synthesize logger=_logger;
@property(retain, nonatomic) SPWarpingBeautificationCache *warpingBeautificationCache; // @synthesize warpingBeautificationCache=_warpingBeautificationCache;
@property(retain, nonatomic) SPProcessorsManager *processorsManager; // @synthesize processorsManager=_processorsManager;
@property(retain, nonatomic) SPSharedQueuesHolder *sharedQueuesHolder; // @synthesize sharedQueuesHolder=_sharedQueuesHolder;
@property(retain, nonatomic) SPApplicationStateHolder *applicationStateHolder; // @synthesize applicationStateHolder=_applicationStateHolder;
@property(retain, nonatomic) id <SPSettings> settings; // @synthesize settings=_settings;
@property(retain, nonatomic) id <SPAnalytics> analytics; // @synthesize analytics=_analytics;
- (void).cxx_destruct;
- (void)postEndProcessNotification;
- (void)postStartProcessNotification;
- (void)faceAnimatorConsumerDidCancel:(id)arg1;
- (void)faceAnimatorConsumer:(id)arg1 didFailWithError:(id)arg2;
- (void)faceAnimatorConsumerDidFinishSuccessfully:(id)arg1;
- (id)generateErrorFromException:(const struct exception *)arg1;
- (void)stopResumeTimer;
- (void)startResumeTimer;
- (void)warpingProcessorCallFinishProcess;
- (void)warpingProcessorCallStartProcess;
- (void)warpingProcessorCallFinishPreloading;
- (void)warpingProcessorCallStartPreload;
- (void)releaseBuffers;
- (void)initializeBuffers;
- (void)waitBuffersQueues;
- (void)performErrorSafeBlock:(CDUnknownBlockType)arg1 finally:(CDUnknownBlockType)arg2;
- (void)dispatchPrepareOperation:(CDUnknownBlockType)arg1 finally:(CDUnknownBlockType)arg2;
- (void)handleWritingFrame:(unsigned long long)arg1;
- (void)handleFrameRendering:(unsigned long long)arg1;
- (void)handleGetFrameDescription:(unsigned long long)arg1;
- (void)handleReadingFrame;
- (_Bool)isInValidRunningState;
- (void)startFramesProcessing:(unsigned long long)arg1;
- (void)resume;
- (void)pause;
- (void)startFromFrame:(unsigned long long)arg1;
- (void)completeWithStatus:(unsigned long long)arg1;
- (_Bool)needToBePaused;
- (void)doProcessWithStartFrame:(unsigned long long)arg1;
- (void)doRelease;
- (void)doPrepareWithStartFrame:(unsigned long long)arg1;
- (void)dispatchReleaseOnQueue:(id)arg1;
- (void)dispatchProcessOnQueue:(id)arg1 startFrame:(unsigned long long)arg2;
- (void)dispatchPrepareOnQueue:(id)arg1 startFrame:(unsigned long long)arg2;
- (void)cancel;
- (void)start;
- (void)dealloc;
- (id)initWithPersons:(id)arg1 scenario:(id)arg2 isRGBA:(_Bool)arg3 consumer:(id)arg4 processingThreads:(unsigned long long)arg5 isLensBeautificationUsed:(_Bool)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

