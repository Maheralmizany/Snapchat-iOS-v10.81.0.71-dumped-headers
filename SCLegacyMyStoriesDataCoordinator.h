//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCDataCoordinatorListener-Protocol.h"
#import "SCLegacyMyStoriesDataUpdateForwarding-Protocol.h"
#import "SCMyStoriesDataCoordinating-Protocol.h"

@class NSString, SCDataCoordinatorListenerAnnouncer, SCGroupStoryCollection, SCLazy, SCMyContributionStoriesCollection, SCMyStories, SCQueuePerformer, SCStories, SCStoriesRequestDebouncer, SCStoriesSnapDeleteCoordinator, SCStoriesSnapPostCoordinator, SCStoriesSnapSaveCoordinator, SCStoriesUnarchiver;
@protocol SCStoriesGrapheneMetricsEmitting, SCStoriesSnapViewerDataCoordinating;

@interface SCLegacyMyStoriesDataCoordinator : NSObject <SCLegacyMyStoriesDataUpdateForwarding, SCDataCoordinatorListener, SCMyStoriesDataCoordinating>
{
    SCDataCoordinatorListenerAnnouncer *_eventAnnouncer;
    SCMyContributionStoriesCollection *_myStoriesCollections;
    SCGroupStoryCollection *_groupStoryCollection;
    SCStories *_stories;
    SCMyStories *_myStories;
    SCStoriesUnarchiver *_storiesUnarchiver;
    SCLazy *_mixerRequester;
    NSString *_currentUserId;
    NSString *_currentUsername;
    SCQueuePerformer *_performer;
    id <SCStoriesGrapheneMetricsEmitting> _grapheneMetricsEmitter;
    SCLazy *_postingLogger;
    SCStoriesSnapSaveCoordinator *_snapSaveCoordinator;
    SCStoriesSnapDeleteCoordinator *_snapDeleteCoordinator;
    SCStoriesSnapPostCoordinator *_snapPostCoordinator;
    id <SCStoriesSnapViewerDataCoordinating> _snapViewerDataCoordinator;
    long long _numOfContinuousFailedSyncs;
    SCStoriesRequestDebouncer *_debouncer;
}

+ (id)dataCoordinatorIdentifier;
- (void).cxx_destruct;
- (void)handleDataRequest:(id)arg1;
- (void)dataCoordinatorDidUpdateWithIdentifier:(id)arg1 dataRequest:(id)arg2;
- (void)storiesArrayDidUpdate;
- (void)markMyStoriesViewedWithStoryId:(id)arg1;
- (long long)postingStateWithClientId:(id)arg1;
- (void)updatePostingProgress:(double)arg1 forStory:(id)arg2;
- (void)updatePostingState:(long long)arg1 forStory:(id)arg2;
- (long long)fetchSnapDeleteStateWithSnapUniqueConsistentId:(id)arg1;
- (void)deleteSnapWithSnapUniqueConsistentId:(id)arg1 storyType:(long long)arg2 storyId:(id)arg3 clientId:(id)arg4 serverId:(id)arg5 archiveOnly:(_Bool)arg6 additionalHttpHeaders:(id)arg7 legacyDeleteSuccessCompletion:(CDUnknownBlockType)arg8;
- (void)deleteStorySnapWithClientId:(id)arg1 storyId:(id)arg2;
- (long long)fetchSnapSaveStateWithSnapUniqueConsistentId:(id)arg1;
- (void)finishSavingSnapWithSnapUniqueConsistentId:(id)arg1 success:(_Bool)arg2;
- (void)startSavingSnapWithSnapUniqueConsistentId:(id)arg1;
- (void)_logLatencyWithFetchStartTime:(double)arg1 step:(id)arg2;
- (void)_invokeAllCompletionBlocksWithSuccess:(_Bool)arg1;
- (void)_handleFetchMyStoriesWithResponse:(id)arg1 fetchStartTime:(double)arg2;
- (void)_handleFetchMyStoriesAfterUnarchiveWithResponse:(id)arg1 fetchStartTime:(double)arg2;
- (void)_makeMyStoriesSyncRequestWithFetchSource:(id)arg1 fetchStartTime:(double)arg2;
- (void)_fetchMyStoriesWithCompletion:(CDUnknownBlockType)arg1 fetchSource:(id)arg2 fetchStartTime:(double)arg3;
- (void)fetchMyStoriesWithCompletion:(CDUnknownBlockType)arg1 fetchSource:(id)arg2;
- (void)didDeleteSnapForServerId:(id)arg1;
- (_Bool)_hasStoryPostsToConfirm;
- (void)fetchMyStoriesIfNeededWithFetchSource:(id)arg1;
- (id)_allMyStorySnapIdsByStoryType;
- (void)fetchViewerInfo;
- (void)queryAllStoriesWithCompletion:(CDUnknownBlockType)arg1;
- (void)insertStorySnap:(id)arg1 storyId:(id)arg2;
- (id)initWithMyContributionStoriesCollection:(id)arg1 groupStoryCollection:(id)arg2 stories:(id)arg3 myStories:(id)arg4 storiesUnarchiver:(id)arg5 currentUserId:(id)arg6 currentUsername:(id)arg7 mixerRequester:(id)arg8 snapDeleteCoordinator:(id)arg9 snapViewerDataCoordinator:(id)arg10 grapheneMetricsEmitter:(id)arg11 postingLogger:(id)arg12 experimentManager:(id)arg13;
- (void)removeDataUpdateListener:(id)arg1;
- (void)addDataUpdateListener:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

