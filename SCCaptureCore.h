//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCCapturer-Protocol.h"
#import "SCManagedCaptureSessionRunningStatusDelegate-Protocol.h"
#import "SCTraceEnabled-Protocol.h"

@class NSString, SCBlackCameraDetector, SCCaptureDeviceAuthorizationChecker, SCCaptureResource, SCCaptureStateMachineContext, SCCapturerTokenProvider, SCFrameProcessLatencyReporter, SCManagedFrameHealthChecker, SCQueuePerformer;
@protocol SCFileInputDecider;

@interface SCCaptureCore : NSObject <SCManagedCaptureSessionRunningStatusDelegate, SCTraceEnabled, SCCapturer>
{
    SCQueuePerformer *_queuePerformer;
    SCCaptureDeviceAuthorizationChecker *_authorizationChecker;
    SCCaptureResource *_captureResource;
    _Bool _appInBackground;
    SCBlackCameraDetector *_blackCameraDetector;
    SCCapturerTokenProvider *_headlessCaptureWarmupTokenProvider;
    SCCaptureStateMachineContext *_stateMachine;
}

@property(readonly, nonatomic) SCCaptureStateMachineContext *stateMachine; // @synthesize stateMachine=_stateMachine;
@property(readonly, nonatomic, getter=isAppInBackground) _Bool appInBackground; // @synthesize appInBackground=_appInBackground;
@property(readonly, nonatomic) SCCapturerTokenProvider *headlessCaptureWarmupTokenProvider; // @synthesize headlessCaptureWarmupTokenProvider=_headlessCaptureWarmupTokenProvider;
- (void).cxx_destruct;
@property(nonatomic, getter=isFaceDetectionEnabled) _Bool faceDetectionEnabled;
- (void)managedCaptureSessionRunningDidChange:(_Bool)arg1;
- (id)snapCreationTriggers;
- (void)_setBlackCameraNoOutputDetectorEnabled:(_Bool)arg1;
- (void)_setLiveVideoStreaming:(_Bool)arg1;
- (_Bool)authorizedForVideoCapture;
- (void)clearTimedTasksWithContext:(id)arg1;
- (void)addTimedTask:(id)arg1 context:(id)arg2;
- (void)sampleFrameWithCompletionHandler:(CDUnknownBlockType)arg1 context:(id)arg2;
- (void)captureSingleVideoFrameAsynchronouslyWithCompletionHandler:(CDUnknownBlockType)arg1 context:(id)arg2;
@property(readonly, nonatomic) id <SCFileInputDecider> fileInputDecider;
@property(readonly, nonatomic) SCFrameProcessLatencyReporter *frameProcessLatencyReporter;
@property(readonly, nonatomic) SCQueuePerformer *queuePerformer;
@property(readonly, nonatomic) SCManagedFrameHealthChecker *frameHealthChecker;
@property(readonly, nonatomic) SCBlackCameraDetector *blackCameraDetector; // @synthesize blackCameraDetector=_blackCameraDetector;
- (void)setBurstCaptureDeblurDelegate:(id)arg1;
- (void)setBlackCameraDetector:(id)arg1 frameHealthChecker:(id)arg2 deviceMotionProvider:(id)arg3 fileInputDecider:(id)arg4 arImageCaptureProvider:(id)arg5 glviewManager:(id)arg6 lensAPIProvider:(id)arg7 lsaComponentTracker:(id)arg8 managedCapturerPreviewLayerControllerDelegate:(id)arg9;
- (CDStruct_4565c1ff)activeSession;
- (_Bool)isVideoMirrored;
- (long long)devicePosition;
- (_Bool)isLensApplied;
- (double)defaultZoomFactor;
- (_Bool)isUltraWideSupported;
- (_Bool)audioQueueStarted;
- (CDStruct_1b6d18a9)firstWrittenAudioBufferDelay;
- (void)checkRestrictedCamera:(CDUnknownBlockType)arg1;
- (id)currentVideoDataSource;
- (id)debugInfo;
- (void)removeDeviceCapacityAnalyzerListener:(id)arg1;
- (void)addDeviceCapacityAnalyzerListener:(id)arg1;
- (void)removeVideoDataSourceListener:(id)arg1;
- (void)addVideoDataSourceListener:(id)arg1;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (void)setVideoCaptureFrameCopyEnabled:(_Bool)arg1 withMaxNumberOfFrames:(long long)arg2;
- (void)mediaServicesWereLost;
- (void)mediaServicesWereReset;
- (void)applicationWillResignActive;
- (void)applicationDidBecomeActive;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (void)setProcessingModule:(id)arg1 enabled:(_Bool)arg2;
- (void)continuousAutofocusAndExposureAsynchronouslyWithCompletionHandler:(CDUnknownBlockType)arg1 context:(id)arg2;
- (void)setAutofocusPointOfInterestAsynchronously:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (void)setExposurePointOfInterestAsynchronously:(struct CGPoint)arg1 fromUser:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3 context:(id)arg4;
- (void)resetZoomFactor:(long long)arg1 context:(id)arg2;
- (void)setZoomFactorAsynchronously:(double)arg1 context:(id)arg2;
- (void)setZoomFactorAsynchronously:(double)arg1 devicePosition:(long long)arg2 context:(id)arg3;
- (void)unlockZoomWithContext:(id)arg1;
- (void)lockZoomWithContext:(id)arg1;
- (void)setBatchCaptureActiveAsynchronously:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (void)setStabilizationModeActiveAsynchronously:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (void)setDepthCaptureModeActiveAsynchronously:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (void)setPortraitModeActiveAsynchronously:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (void)setNightModeActiveAsynchronously:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (void)_setLensesActive:(_Bool)arg1 liveVideoStreaming:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3 context:(id)arg4;
- (void)setLensesInTalkActive:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (void)setLensesActive:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (void)setFlashActive:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
@property(nonatomic) long long videoStabilizationMode;
- (void)setDevicePositionAsynchronously:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (void)detectLensCategoryOnNextFrame:(struct CGPoint)arg1 lenses:(id)arg2 completion:(CDUnknownBlockType)arg3 context:(id)arg4;
- (void)convertViewCoordinates:(struct CGPoint)arg1 viewSize:(struct CGSize)arg2 completionHandler:(CDUnknownBlockType)arg3 context:(id)arg4;
- (void)convertViewCoordinates:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (void)addSampleBufferDisplayController:(id)arg1 context:(id)arg2;
- (void)startStreamingAsynchronouslyWithCompletionHandler:(CDUnknownBlockType)arg1 context:(id)arg2;
- (void)stopScanAsynchronouslyWithCompletionHandler:(CDUnknownBlockType)arg1 context:(id)arg2;
- (void)startScanAsynchronouslyWithScanConfiguration:(id)arg1 context:(id)arg2;
- (void)onFingerDownResolvedWithContext:(id)arg1;
- (void)onFingerDownTriggeredWithContext:(id)arg1;
- (void)cancelRecordingAsynchronouslyWithContext:(id)arg1;
- (void)stopRecordingAsynchronouslyWithContext:(id)arg1;
- (void)startRecordingAsynchronouslyWithOutputSettings:(id)arg1 audioConfiguration:(id)arg2 maxDuration:(double)arg3 fileURL:(id)arg4 captureSessionID:(id)arg5 completionHandler:(CDUnknownBlockType)arg6 context:(id)arg7;
- (void)captureStillImageAsynchronouslyWithCaptureConfiguration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (id)startRunningAsynchronouslyWithDevicePosition:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (id)startRunningAsynchronouslyWithCompletionHandler:(CDUnknownBlockType)arg1 context:(id)arg2;
- (void)warmupCaptureCoreDuringHeadlessLaunch:(CDUnknownBlockType)arg1 context:(id)arg2;
- (void)warmupCaptureCoreWithDevicePosition:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2 context:(id)arg3;
- (void)setupCapturePreviewLayerController;
- (id)lensProcessingCore;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

