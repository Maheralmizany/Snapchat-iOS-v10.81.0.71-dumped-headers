//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CXProviderDelegate-Protocol.h"
#import "SCTCKCallManager-Protocol.h"
#import "SCTCKMetricServices-Protocol.h"

@class CXCallController, CXProvider, NSDictionary, NSMutableDictionary, NSString, SCTCKCall, SCTCKOutgoinCallInfo;
@protocol SCApplicationLifecycleNavigationHandler, SCTCKAudioServices, SCTCKAudioServicesProvider, SCTCKCallManagerListener, SCTCKLocationServices, SCTIdentityServices;

@interface SCTCKCallManager : NSObject <CXProviderDelegate, SCTCKCallManager, SCTCKMetricServices>
{
    NSString *_localUsername;
    CXProvider *_provider;
    CXCallController *_callController;
    id <SCTCKCallManagerListener> _listener;
    id <SCTCKAudioServices> _callKitAudioServices;
    id <SCTCKAudioServicesProvider> _callKitAudioServicesProvider;
    id <SCTIdentityServices> _identityServices;
    id <SCTCKLocationServices> _locationServices;
    id <SCApplicationLifecycleNavigationHandler> _navigationHandler;
    NSMutableDictionary *_calls;
    NSMutableDictionary *_callMetrics;
    _Bool _appStartingUp;
    _Bool _connectingOutgoingCall;
    _Bool _outgoingFromRecentList;
    _Bool _currentSpeakerState;
    _Bool _audioSessionRequested;
    SCTCKOutgoinCallInfo *_pendingOutgoingCall;
    CDUnknownBlockType _audioActivatedCallback;
    _Bool _audioRoutingEnabled;
    SCTCKCall *_callNavigationPending;
    NSDictionary *_transitionTable;
    unsigned long long _callingState;
    unsigned long long _publishedMedia;
}

@property(nonatomic) _Bool audioRoutingEnabled; // @synthesize audioRoutingEnabled=_audioRoutingEnabled;
@property(nonatomic) unsigned long long publishedMedia; // @synthesize publishedMedia=_publishedMedia;
@property(nonatomic) unsigned long long callingState; // @synthesize callingState=_callingState;
@property(retain, nonatomic) NSDictionary *transitionTable; // @synthesize transitionTable=_transitionTable;
@property(retain, nonatomic) SCTCKCall *callNavigationPending; // @synthesize callNavigationPending=_callNavigationPending;
- (void).cxx_destruct;
- (void)_fileAutoShakeToReportWithTitle:(id)arg1 email:(id)arg2;
- (id)_callForConvoId:(id)arg1;
- (void)_setIncludesCallsInRecentsIfPossible:(_Bool)arg1;
- (void)_releaseCallKitAudioSession;
- (void)_requestCallKitAudioSessionWithProximityEnabled:(_Bool)arg1 speakers:(_Bool)arg2;
- (void)_requestCallKitAudioSessionWithProximityEnabled:(_Bool)arg1;
- (void)_presentChatIfPending;
- (void)_reportOutgoingCallIfPending;
- (void)_appStartupComplete:(id)arg1;
- (void)_callDidEnd:(id)arg1;
- (void)_endCall:(id)arg1 reason:(unsigned long long)arg2;
- (void)_presentChatForCall:(id)arg1;
- (void)_dismissCalls;
- (void)_releaseCallKit;
- (void)_prepareCallKit;
- (void)_performAction:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_performAction:(id)arg1;
- (id)_createCXCallUpdateForConvoId:(id)arg1 isVideo:(_Bool)arg2 callerName:(id)arg3;
- (id)_updateConfigurationForConvoId:(id)arg1 isVideo:(_Bool)arg2 notification:(id)arg3;
- (id)_groupNameBasedOnParticipantNamesForGroup:(id)arg1;
- (void)_fetchConversationMetadataForConvoId:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_checkIfConversationIsGroupForConvoId:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_callTitleForConvoId:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_updateConfigurationForConvoId:(id)arg1 isVideo:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)onPublishedMediaOrMuteChanged:(id)arg1 media:(unsigned long long)arg2 muted:(_Bool)arg3;
- (void)onOutgoingCallStarted;
- (void)onOutgoingCallRequested;
- (void)onOutgoingCallRejected;
- (void)onOutgoingCallMissed;
- (void)onOutgoingCallCancelled;
- (void)onIncomingCallWatched;
- (void)onIncomingCallStarted;
- (void)onIncomingCallReceived;
- (void)onIncomingCallCancelled;
- (void)onCallWatched;
- (void)onCallEnded;
- (void)provider:(id)arg1 didDeactivateAudioSession:(id)arg2;
- (void)provider:(id)arg1 didActivateAudioSession:(id)arg2;
- (void)provider:(id)arg1 performSetMutedCallAction:(id)arg2;
- (void)provider:(id)arg1 performAnswerCallAction:(id)arg2;
- (void)provider:(id)arg1 performEndCallAction:(id)arg2;
- (void)provider:(id)arg1 performStartCallAction:(id)arg2;
- (void)providerDidReset:(id)arg1;
- (void)outgoingCallConnectedForHeadlessCallServices:(id)arg1 convoId:(id)arg2;
- (void)callDidEndForHeadlessCallServices:(id)arg1 reason:(unsigned long long)arg2;
- (id)metricsForConvoId:(id)arg1;
- (_Bool)validLocation;
- (void)reportOutgoingCallToConvoId:(id)arg1 isVideo:(_Bool)arg2;
- (_Bool)hasConnectedCall;
- (_Bool)hasCallObject;
- (_Bool)hasActiveCall;
- (void)handleActiveChatForConvoId:(id)arg1;
- (void)handleUserActionOnNotification:(id)arg1;
- (void)setNavigationHandler:(id)arg1;
- (void)notifyMediaUpdateForConvoId:(id)arg1 isVideo:(_Bool)arg2;
- (void)reportMediaUpdateCallNotification:(id)arg1 convoId:(id)arg2 media:(unsigned long long)arg3;
- (void)reportOutgoingCallToConvoId:(id)arg1 fromPhoneRecentsList:(_Bool)arg2 isVideo:(_Bool)arg3;
- (void)reportIncomingCallNotification:(id)arg1 convoId:(id)arg2 isVideo:(_Bool)arg3 shouldIncludeInRecent:(_Bool)arg4 withCompletionHandler:(CDUnknownBlockType)arg5;
- (void)reportGhostCallAndTearDownForNotification:(id)arg1 convoId:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (id)initWithLocalUsername:(id)arg1 listener:(id)arg2 callKitAudioServicesProvider:(id)arg3 callKitAudioServices:(id)arg4 identityServices:(id)arg5 locationServices:(id)arg6 audioRoutingEnabled:(_Bool)arg7;
- (id)_callKitAudioServices;
- (void)_prepareAudioConfigurationStates;
- (void)_handleApplicationLifecycleNotification:(long long)arg1;
- (void)_appWillResignActive:(id)arg1;
- (void)_appDidBecomeActive:(id)arg1;
- (void)_appDidEnterBackground:(id)arg1;
- (void)_proximityStateChanged:(id)arg1;
- (void)updateAudioConfiguration:(long long)arg1;
- (void)prepareAudioConfigurationIfNeeded;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

