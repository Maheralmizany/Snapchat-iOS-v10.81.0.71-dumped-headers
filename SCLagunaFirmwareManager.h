//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCLagunaFirmwareTagStoreDelegate-Protocol.h"
#import "SCSpectaclesEventListener-Protocol.h"
#import "SCSpectaclesFirmwareDownloaderDelegate-Protocol.h"
#import "SCSpectaclesFirmwareManaging-Protocol.h"
#import "SCSpectaclesFirmwareManagingUIAutomation-Protocol.h"

@class NSDate, NSMutableSet, NSString, SCFeatureSettingsService, SCLagunaFirmwareTagStore, SCLagunaFirmwareUpdateEventListenerAnnouncer, SCSessionRequestManager, SCSpectaclesDevice, SCSpectaclesFirmwareDownloader;
@protocol SCLagunaManiphestAdapter, SCPerforming, SCSpectaclesAppLogger, SCSpectaclesDeviceActivating, SCSpectaclesFirmwareVersion, SCSpectaclesManaging, SCSpectaclesReleaseNoteStoring;

@interface SCLagunaFirmwareManager : NSObject <SCSpectaclesFirmwareManagingUIAutomation, SCSpectaclesFirmwareDownloaderDelegate, SCSpectaclesEventListener, SCLagunaFirmwareTagStoreDelegate, SCSpectaclesFirmwareManaging>
{
    id <SCPerforming> _performer;
    id <SCSpectaclesManaging> _spectaclesManager;
    id <SCSpectaclesDeviceActivating> _deviceActivationService;
    id <SCSpectaclesAppLogger> _analyticsLogger;
    id <SCLagunaManiphestAdapter> _maniphestAdapter;
    SCSpectaclesFirmwareDownloader *_firmwareDownloader;
    SCLagunaFirmwareTagStore *_tagStore;
    SCSessionRequestManager *_requestManager;
    SCFeatureSettingsService *_featureSettingsService;
    id <SCSpectaclesReleaseNoteStoring> _releaseNoteService;
    SCSpectaclesDevice *_targetDevice;
    unsigned long long _currentState;
    unsigned long long _currentUpdateProgress;
    _Bool _sawTransferUpdate;
    NSString *_sessionId;
    id <SCSpectaclesFirmwareVersion> _newFirmwareVersion;
    id <SCSpectaclesFirmwareVersion> _oldFirmwareVersion;
    id <SCSpectaclesFirmwareVersion> _intermediateVersion;
    NSString *_newFirmwareHash;
    NSString *_oldFirmwareHash;
    NSString *_intermediateFirmwareHash;
    unsigned long long _numRevertDevice;
    _Bool _updateIsActive;
    _Bool _completedIntermediateUpdate;
    NSDate *_updateStartedDate;
    NSDate *_updateDownloadedDate;
    NSDate *_updateTransferredDate;
    NSMutableSet *_passiveUpdatedDevices;
    SCLagunaFirmwareUpdateEventListenerAnnouncer *_eventAnnouncer;
}

+ (id)_errorStringForFailureReason:(unsigned long long)arg1;
+ (long long)requiredBatteryLevelForFirmwareUpdate:(id)arg1;
@property(retain, nonatomic) SCLagunaFirmwareUpdateEventListenerAnnouncer *eventAnnouncer; // @synthesize eventAnnouncer=_eventAnnouncer;
- (void).cxx_destruct;
- (void)_logFirmwareUpdateFinished:(_Bool)arg1 error:(id)arg2;
- (void)_logFirmwareUpdateFailureWithUserInfo:(id)arg1 reason:(unsigned long long)arg2 errorString:(id)arg3;
- (void)_logFirmwareUpdateSuccessWithUserInfo:(id)arg1;
- (id)_specsConnectionInfo;
- (id)_analyticsUserInfo;
- (unsigned long long)_updateStateForManagerState:(unsigned long long)arg1;
- (_Bool)_targetDeviceCheckingDownloadingOrTransferring;
- (_Bool)_targetDeviceActivelyUpdating;
- (_Bool)_hasValidUpdateParameters;
- (id)_firmwareFilePath;
- (void)_attemptRemoveFirmwareFile;
- (_Bool)_isTargetDeviceBatteryLevelLowForFirmwareUpdate;
- (void)_attemptFlashUpdate;
- (void)_startUpdatingPatch;
- (void)_startDownloadingPatch;
- (void)_startCheckingForUpdate;
- (void)_revertFirmwareBinary;
- (void)_startPrepareUpdateFailureTimer;
- (void)_startCheckingUpdateFailureTimer;
- (void)_startTransferUpdateFailureTimer;
- (void)_startFlashUpdateFailureTimer;
- (void)_startProgressTimer;
- (void)_transitionToState:(unsigned long long)arg1;
- (void)_succeedCurrentUpdate;
- (void)_succeedIntermediateUpdate;
- (void)_failCurrentUpdate:(unsigned long long)arg1;
- (id)_updateWindowStart;
- (double)_updateWindowDuration;
- (void)spectaclesTransferSession:(id)arg1 onTransferUpdate:(unsigned long long)arg2;
- (void)spectaclesDevice:(id)arg1 didCompletedScheduledUpdateWithUserInfo:(id)arg2 error:(id)arg3;
- (void)spectaclesDevice:(id)arg1 onFirmwareUpdate:(unsigned long long)arg2 progress:(float)arg3;
- (void)spectaclesDevice:(id)arg1 didFetchFirmwareUpdateDigest:(id)arg2;
- (void)spectaclesDevice:(id)arg1 didUpdateInfo:(unsigned long long)arg2;
- (void)spectaclesDeviceDidUpdateState:(id)arg1;
- (void)spectaclesDeviceDidPair:(id)arg1;
- (void)firmwareDownloader:(id)arg1 didDownloadPatchToPath:(id)arg2;
- (void)firmwareDownloaderDidFailPatchDownload:(id)arg1;
- (void)firmwareDownloader:(id)arg1 didFetchTargetDigest:(id)arg2 targetVersion:(id)arg3 intermediateDigest:(id)arg4 intermediateVersion:(id)arg5;
- (void)firmwareDownloader:(id)arg1 didFailMetadataFetch:(long long)arg2;
- (void)_showMetadataFetchFailureMessage:(id)arg1;
- (void)tagStoreDidFailFetchingLatestVersion:(id)arg1;
- (void)tagStoreDidFetchLatestVersion:(id)arg1;
- (void)showUpdateAlertForDevice:(id)arg1;
- (void)_attemptStartUpdatingDevice:(id)arg1;
- (_Bool)updateRequiredForDevice:(id)arg1;
- (_Bool)updateAvailableForDevice:(id)arg1;
- (void)_prefetchNewFirmwareVersion;
- (void)_startPassiveUpdates;
- (void)_startUpdatingDevice:(id)arg1 updateIsActive:(_Bool)arg2;
- (id)_activeAnnouncer;
- (void)prefetchNewFirmwareVersion;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (_Bool)startUpdatingDevice:(id)arg1;
- (_Bool)checkUpdateForDevice:(id)arg1;
- (id)updateMetadataForDevice:(id)arg1;
- (id)updateFirmwareVersionForDevice:(id)arg1;
- (unsigned long long)updateProgressForDevice:(id)arg1;
- (unsigned long long)stateForDevice:(id)arg1;
- (void)dealloc;
- (id)initWithRequestManager:(id)arg1 featureSettingsService:(id)arg2 spectaclesManager:(id)arg3 deviceActivationService:(id)arg4 releaseNoteService:(id)arg5 analyticsLogger:(id)arg6 maniphestAdapter:(id)arg7;
- (void)mockSpectaclesFirmwareUpdateFailure;
- (void)mockSpectaclesFirmwareUpdateSuccess;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

