//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCoding-Protocol.h"
#import "SCChatConversationStore-Protocol.h"
#import "SCChatPrefetchResponseProcessing-Protocol.h"
#import "SCTraceEnabled-Protocol.h"

@class NSCalendar, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, SCChatConversationStoreListenerAnnouncer, SCChatV3FeedUpdater, SCChatV3MessageReceiver, SCConversationPrefetchReader, SCConversationPrefetchResponses, SCExperimentManager, SCLazy;
@protocol SCChatConversationFetcher, SCConversationStorage, SCFriendsFeedDataCoordinating, SCGraphene, SCGroupManager, SCPerforming, SCUserHelperProtocol;

@interface SCChatV3ConversationStore : NSObject <SCChatConversationStore, NSCoding, SCTraceEnabled, SCChatPrefetchResponseProcessing>
{
    NSMutableDictionary *_conversationFetchQueue;
    NSMutableDictionary *_conversationFetchReason;
    id <SCChatConversationFetcher> _fetcher;
    id <SCGroupManager> _groupManager;
    SCChatV3MessageReceiver *_messageReceiver;
    SCChatV3FeedUpdater *_feedUpdater;
    id <SCUserHelperProtocol> _userHelper;
    SCChatConversationStoreListenerAnnouncer *_announcer;
    NSMutableSet *_clearedConversationIds;
    NSMutableArray *_conversationsVersionCallbacks;
    SCLazy *_receiveFlowLogger;
    SCLazy *_autoShakeToReporter;
    SCConversationPrefetchReader *_prefetchReader;
    NSMutableArray *_prefetchCompletions;
    id <SCGraphene> _graphene;
    id <SCFriendsFeedDataCoordinating> _friendsFeedDataCoordinator;
    SCLazy *_userPreferences;
    SCExperimentManager *_experimentManager;
    NSCalendar *_calendar;
    _Bool _isLoadedFromDisk;
    id <SCPerforming> _performer;
    SCConversationPrefetchResponses *_prefetchResponses;
    NSString *_username;
    NSString *_userId;
    NSString *_oneOnOneSnapsSyncToken;
    NSString *_activeConversationId;
    NSDictionary *_conversationMigrationStates;
    id <SCConversationStorage> _storage;
}

@property(retain, nonatomic) id <SCConversationStorage> storage; // @synthesize storage=_storage;
@property(retain) NSDictionary *conversationMigrationStates; // @synthesize conversationMigrationStates=_conversationMigrationStates;
@property(copy) NSString *activeConversationId; // @synthesize activeConversationId=_activeConversationId;
@property(readonly, copy, nonatomic) NSString *oneOnOneSnapsSyncToken; // @synthesize oneOnOneSnapsSyncToken=_oneOnOneSnapsSyncToken;
@property(readonly, copy, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property(readonly, copy, nonatomic) NSString *username; // @synthesize username=_username;
@property(retain) SCConversationPrefetchResponses *prefetchResponses; // @synthesize prefetchResponses=_prefetchResponses;
@property _Bool isLoadedFromDisk; // @synthesize isLoadedFromDisk=_isLoadedFromDisk;
@property(readonly, nonatomic) id <SCPerforming> performer; // @synthesize performer=_performer;
- (void).cxx_destruct;
- (id)_invalidConversationsIdsWaitingToMigrate:(id)arg1;
- (id)invalidConversationsToBeMigrated:(id)arg1;
- (id)conversationMigrationStatesForDebugging;
- (id)conversationPrefixesForDebugging;
- (void)_logDidNotTrimMetric:(id)arg1;
- (long long)_daysBetween:(id)arg1 and:(id)arg2;
- (id)_conversationIdsToPreserveWithFriendsFeedItems:(id)arg1;
- (id)trim;
- (void)setFriendsFeedDataCoordinater:(id)arg1;
- (void)logDuplicateRequestsIfNessaryWithMischiefs:(id)arg1 conversations:(id)arg2;
- (void)processPrefetchResponses:(id)arg1 triggerType:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_performBlock:(CDUnknownBlockType)arg1 forConversationId:(id)arg2;
- (void)fetchAuthForConversationId:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_processSOJUChatResponse:(id)arg1 isPagination:(_Bool)arg2 isOneOnOnePlaceHolder:(_Bool)arg3;
- (void)_processSOJUMischiefResponse:(id)arg1;
- (void)_updateConversations:(id)arg1 setLoadStatus:(long long)arg2;
- (void)updateConversations:(id)arg1 setLoadStatus:(long long)arg2;
- (void)_updateConversation:(id)arg1 setHistoryLoadStateAs:(long long)arg2;
- (void)fetchOneOnOneConversationForMissingMessage:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchOneOnOneConversation:(id)arg1 fetchReason:(long long)arg2 chatSequenceNumbers:(struct NSDictionary *)arg3 stateUpdateSequenceNumbers:(struct NSDictionary *)arg4 completion:(CDUnknownBlockType)arg5;
- (void)paginateForwardForConversationId:(id)arg1 withEarliestSequenceNumbers:(struct NSDictionary *)arg2 latestSequenceNumbers:(struct NSDictionary *)arg3 completion:(CDUnknownBlockType)arg4;
- (void)loadHistoryForConversationId:(id)arg1 retryIfFailed:(_Bool)arg2 retryCount:(unsigned long long)arg3;
- (void)putConversation:(id)arg1;
- (id)getConversationSync:(id)arg1;
- (id)conversationStoreQueuePerformer;
- (void)_clear;
- (void)_removeConversationByConversationIds:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeConversationByIds:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_clearConversationById:(id)arg1;
- (void)updateConversationWithGroup:(id)arg1;
- (void)_updateConversation:(id)arg1 modifyAllMessagesWithMutationBlock:(CDUnknownBlockType)arg2 withConversationMutationBlock:(CDUnknownBlockType)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;
- (void)_updateConversation:(id)arg1 modifyMessageIds:(id)arg2 withMutationBlock:(CDUnknownBlockType)arg3 enforceMessagesExist:(_Bool)arg4 conversationMutationBlock:(CDUnknownBlockType)arg5 completionBlock:(CDUnknownBlockType)arg6 callStack:(id)arg7;
- (void)_updateConversation:(id)arg1 withMutationBlock:(CDUnknownBlockType)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)_processFetchedMessageWithId:(id)arg1 conversationId:(id)arg2 conversation:(id)arg3 result:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (id)xLogObjectInfo;
@property(readonly, copy) NSString *description;
- (void)fetchMessageById:(id)arg1 conversationId:(id)arg2 completion:(CDUnknownBlockType)arg3 withConversationMutationBlock:(CDUnknownBlockType)arg4;
- (void)fetchMessageById:(id)arg1 conversationId:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)getMessageLocallyWithMessageId:(id)arg1 conversationId:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateConversationById:(id)arg1 modifyAllMessagesWithMutationBlock:(CDUnknownBlockType)arg2 withConversationMutationBlock:(CDUnknownBlockType)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;
- (void)updateConversationById:(id)arg1 modifyAllMessagesWithMutationBlock:(CDUnknownBlockType)arg2 withConversationMutationBlock:(CDUnknownBlockType)arg3;
- (void)updateConversationById:(id)arg1 modifyAllMessagesWithMutationBlock:(CDUnknownBlockType)arg2;
- (void)updateConversationById:(id)arg1 modifyMessageIds:(id)arg2 withMutationBlock:(CDUnknownBlockType)arg3 enforceMessagesExist:(_Bool)arg4 conversationMutationBlock:(CDUnknownBlockType)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (void)updateConversationById:(id)arg1 modifyMessageIds:(id)arg2 withMutationBlock:(CDUnknownBlockType)arg3 enforceMessagesExist:(_Bool)arg4 withConversationMutationBlock:(CDUnknownBlockType)arg5;
- (void)updateConversationById:(id)arg1 modifyMessageIds:(id)arg2 withMutationBlock:(CDUnknownBlockType)arg3 withConversationMutationBlock:(CDUnknownBlockType)arg4;
- (void)updateConversationById:(id)arg1 modifyMessageIds:(id)arg2 withMutationBlock:(CDUnknownBlockType)arg3;
- (void)_updateConversationsByIds:(id)arg1 withMutationBlockWithId:(CDUnknownBlockType)arg2 fetchContext:(id)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;
- (void)updateConversationsByIds:(id)arg1 fetchContext:(id)arg2 withMutationBlockWithId:(CDUnknownBlockType)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;
- (void)updateConversationById:(id)arg1 withMutationBlock:(CDUnknownBlockType)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)updateConversationById:(id)arg1 withMutationBlock:(CDUnknownBlockType)arg2;
- (void)updateConversationById:(id)arg1 fetchIfDoesntExist:(_Bool)arg2 withMutationBlock:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (void)_updatePendingSnapUpdatesAndClear;
- (void)clearAsync;
- (void)clear;
- (void)_putConversations:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_putConversation:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)clearConversationById:(id)arg1;
- (void)_didFetchConversation:(id)arg1 forConversationId:(id)arg2 source:(id)arg3;
- (void)_updateConversationFetchQueue;
- (void)_startFetchingConversations:(id)arg1;
- (void)_addFetchHandlerByConvId:(id)arg1 fetchReason:(long long)arg2 handler:(CDUnknownBlockType)arg3;
- (void)_fetchConversationFromServerById:(id)arg1 fetchReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)fetchConversationFromServerById:(id)arg1 fetchReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_getConversationById:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)getConversationById:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)getLocalConversationById:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_checkAndCorrectLegacyDiskConversationsWithMessageStateHandler:(id)arg1;
- (void)checkAndCorrectAllDiskConversationsWithMessageStateHandler:(id)arg1;
- (void)_executeFetchConversationsVersionCallbacks:(id)arg1 withConversationsVersion:(id)arg2;
- (void)_fetchConversationsVersionAndPerform:(id)arg1;
- (void)_fetchConversationsVersionWithCallback:(CDUnknownBlockType)arg1;
- (void)_updateOneOnOneSnapsSyncToken:(id)arg1;
- (void)updateOneOnOneSnapsSyncToken:(id)arg1;
- (id)fetchConversationsVersionSync;
- (void)fetchConversationsVersionWithCallback:(CDUnknownBlockType)arg1;
- (void)fetchAllConversationIdsWithCompletion:(CDUnknownBlockType)arg1;
- (void)getAllMediaReferencesAndPerformOnDedicatedThread:(CDUnknownBlockType)arg1;
- (void)getPendingSnapUpdatesAndPerformOnDedicatedThread:(CDUnknownBlockType)arg1;
- (void)getAllConversationIdsAndPerformOnDedicatedThread:(CDUnknownBlockType)arg1;
- (void)prefetchConversationById:(id)arg1;
- (id)_updateConversationId:(id)arg1 conversation:(id)arg2 bufferBatch:(id)arg3 isCleared:(_Bool)arg4 withPrefetchResponse:(id)arg5;
- (void)_applyPrefetchedConversations;
- (void)_markAsLoaded;
- (void)markAsLoadedAndSyncWithGroup;
- (void)_syncGroupsWithGroupManager;
- (void)_updateFeedWithAllConversations;
- (void)_mergeWithConversationStoreLoadedFromDisk:(id)arg1;
- (void)mergeWithConversationStoreLoadedFromDisk:(id)arg1;
- (void)unsetActiveConversationId:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)configureWithConversationFetcher:(id)arg1 messageReceiver:(id)arg2 feedUpdater:(id)arg3 userHelper:(id)arg4 groupManager:(id)arg5 lazyDocObjectContext:(id)arg6 username:(id)arg7 userId:(id)arg8 receiveFlowLogger:(id)arg9 autoShakeToReporter:(id)arg10 graphene:(id)arg11 prefetchReader:(id)arg12 userPreferences:(id)arg13 experimentManager:(id)arg14;
- (id)initWithPerformer:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

