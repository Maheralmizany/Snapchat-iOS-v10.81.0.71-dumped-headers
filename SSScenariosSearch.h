//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray;

@interface SSScenariosSearch : NSObject
{
    // Error parsing type: {function<std::__1::vector<GlyphPlaceholder, std::__1::allocator<GlyphPlaceholder> > (const std::__1::basic_string<char> &)>="__f_"{__value_func<std::__1::vector<GlyphPlaceholder, std::__1::allocator<GlyphPlaceholder> > (const std::__1::basic_string<char> &)>="__buf_"{type="__lx"[24C]}"__f_"^{__base<std::__1::vector<GlyphPlaceholder, std::__1::allocator<GlyphPlaceholder> > (const std::__1::basic_string<char> &)>}}}, name: aiTextBuilder
    struct shared_ptr<ScenariosSearch> search;
    NSArray *_configurationNames;
    NSArray *_availableConfigurationNames;
}

+ (id)nsArrayFromFeatures:(const vector_8f06c10f *)arg1;
+ (id)markupPrintableText:(const vector_ae886608 *)arg1 allowNil:(_Bool)arg2;
+ (_Bool)isEmojiString:(id)arg1;
+ (id)getApiVersionFromConfig:(id)arg1 error:(id *)arg2;
+ (id)textToLinesSplitCaller;
@property(readonly, nonatomic) NSArray *availableConfigurationNames; // @synthesize availableConfigurationNames=_availableConfigurationNames;
@property(readonly, nonatomic) NSArray *configurationNames; // @synthesize configurationNames=_configurationNames;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)needSearchSessionId;
- (_Bool)needChatSessionId;
- (_Bool)needSessionId;
- (id)convertScenario:(struct AttributedScenario)arg1 globalPrintableText:(id)arg2 globalPrintableUpperText:(id)arg3;
- (id)convertScenarioResources:(const struct ScenarioResources *)arg1;
- (id)convertToSSSearchResult:(const struct SearchResult *)arg1 limitResultsCount:(id)arg2;
- (id)getCategoriesWithHandlingError:(id *)arg1;
- (id)getOrderedForPrefetch:(id)arg1 error:(id *)arg2;
- (id)getByQuery:(id)arg1 queryParams:(id)arg2 error:(id *)arg3;
- (id)getByIDs:(id)arg1 queryParams:(id)arg2 error:(id *)arg3;
- (id)getByID:(id)arg1 queryParams:(id)arg2 error:(id *)arg3;
- (struct QueryParams)convertQueryParams:(id)arg1 withQuery:(id)arg2;
- (id)initWithScenariosConfigPath:(id)arg1 andExperimentNames:(id)arg2 andTextSplitter:(id)arg3 error:(id *)arg4;
- (id)initWithScenariosConfigPath:(id)arg1 andExperimentNames:(id)arg2 andTextSplitter:(id)arg3 andResourcePaths:(id)arg4 error:(id *)arg5;

@end

