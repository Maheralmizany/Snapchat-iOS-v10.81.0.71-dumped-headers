//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "SCSafeBrowsingWarningViewDelegate-Protocol.h"
#import "SCWebBrowser-Protocol.h"
#import "SCWebBrowserV11Revision2HeaderDelegate-Protocol.h"
#import "SCWebBrowserV11ToolbarDelegate-Protocol.h"
#import "SCWebBrowsingURLInterceptorDelegate-Protocol.h"
#import "SIGActionSheetDelegate-Protocol.h"
#import "SIGCardTransitionDelegate-Protocol.h"
#import "WKNavigationDelegate-Protocol.h"
#import "WKUIDelegate-Protocol.h"

@class NSDictionary, NSMutableSet, NSNumber, NSOperationQueue, NSString, NSURL, SCSafeBrowsingWarningView, SCWebBrowserConfig, SCWebBrowserV11Revision2Header, SCWebBrowserV11Toolbar, SCWebBrowsingJavaScriptBridge, SCWebBrowsingScriptPerformanceMetrics, SCWebBrowsingScriptScrolling, SIGActionSheet, UILayoutGuide, WKWebView;
@protocol SCWebBrowserDelegate, SCWebBrowsingContentFetcherProtocol, SCWebBrowsingURLChecker, SCWebBrowsingURLInterceptor, SIGCardTransition;

@interface SCWebBrowserV11Revision2ViewController : UIViewController <WKUIDelegate, WKNavigationDelegate, SCWebBrowserV11ToolbarDelegate, SCSafeBrowsingWarningViewDelegate, SIGActionSheetDelegate, SCWebBrowsingURLInterceptorDelegate, SCWebBrowserV11Revision2HeaderDelegate, SIGCardTransitionDelegate, SCWebBrowser>
{
    _Bool _userCanPullToDismiss;
    _Bool _didCompleteInitialLoad;
    _Bool _isViewVisible;
    _Bool _isOffScreen;
    _Bool _isNavigationInProgress;
    _Bool _isScrolledToTop;
    _Bool _isPrefetchHintsLoadTriggered;
    _Bool _isLoadingPrefetchHints;
    WKWebView *_webview;
    SCSafeBrowsingWarningView *_safeBrowsingWarningView;
    SCWebBrowserV11Revision2Header *_header;
    SCWebBrowserConfig *_config;
    SCWebBrowsingJavaScriptBridge *_jsBridge;
    SCWebBrowsingScriptPerformanceMetrics *_performanceMetricsScript;
    SCWebBrowsingScriptScrolling *_scrollingScript;
    id <SCWebBrowserDelegate> _delegate;
    id <SCWebBrowsingURLInterceptor> _urlInterceptor;
    id <SCWebBrowsingURLChecker> _safeBrowsingChecker;
    id <SCWebBrowsingContentFetcherProtocol> _contentFetcher;
    NSURL *_desiredURL;
    NSURL *_expectedInitialURL;
    NSURL *_finalURLForInitialRedirectChain;
    NSNumber *_initialLoadStatusCode;
    NSOperationQueue *_queueRunningWhileVisible;
    unsigned long long _committedNavigationCount;
    NSMutableSet *_navigationDecisionHandlers;
    SCWebBrowserV11Toolbar *_bottomBar;
    UILayoutGuide *_bottomToolbarLayoutGuide;
    SIGActionSheet *_connectionErrorActionSheet;
    NSDictionary *_javaScriptMetrics;
    id <SIGCardTransition> _cardTransition;
}

+ (id)browserName;
+ (_Bool)isPreloadingSupported;
@property(readonly, nonatomic) id <SIGCardTransition> cardTransition; // @synthesize cardTransition=_cardTransition;
@property(nonatomic) _Bool isLoadingPrefetchHints; // @synthesize isLoadingPrefetchHints=_isLoadingPrefetchHints;
@property(nonatomic) _Bool isPrefetchHintsLoadTriggered; // @synthesize isPrefetchHintsLoadTriggered=_isPrefetchHintsLoadTriggered;
@property(nonatomic) _Bool isScrolledToTop; // @synthesize isScrolledToTop=_isScrolledToTop;
@property(retain, nonatomic) NSDictionary *javaScriptMetrics; // @synthesize javaScriptMetrics=_javaScriptMetrics;
@property(nonatomic) __weak SIGActionSheet *connectionErrorActionSheet; // @synthesize connectionErrorActionSheet=_connectionErrorActionSheet;
@property(retain, nonatomic) UILayoutGuide *bottomToolbarLayoutGuide; // @synthesize bottomToolbarLayoutGuide=_bottomToolbarLayoutGuide;
@property(retain, nonatomic) SCWebBrowserV11Toolbar *bottomBar; // @synthesize bottomBar=_bottomBar;
@property(retain, nonatomic) NSMutableSet *navigationDecisionHandlers; // @synthesize navigationDecisionHandlers=_navigationDecisionHandlers;
@property(nonatomic) unsigned long long committedNavigationCount; // @synthesize committedNavigationCount=_committedNavigationCount;
@property(nonatomic) _Bool isNavigationInProgress; // @synthesize isNavigationInProgress=_isNavigationInProgress;
@property(nonatomic) _Bool isOffScreen; // @synthesize isOffScreen=_isOffScreen;
@property(nonatomic) _Bool isViewVisible; // @synthesize isViewVisible=_isViewVisible;
@property(retain, nonatomic) NSOperationQueue *queueRunningWhileVisible; // @synthesize queueRunningWhileVisible=_queueRunningWhileVisible;
@property(nonatomic) _Bool didCompleteInitialLoad; // @synthesize didCompleteInitialLoad=_didCompleteInitialLoad;
@property(retain, nonatomic) NSNumber *initialLoadStatusCode; // @synthesize initialLoadStatusCode=_initialLoadStatusCode;
@property(retain, nonatomic) NSURL *finalURLForInitialRedirectChain; // @synthesize finalURLForInitialRedirectChain=_finalURLForInitialRedirectChain;
@property(retain, nonatomic) NSURL *expectedInitialURL; // @synthesize expectedInitialURL=_expectedInitialURL;
@property(retain, nonatomic) NSURL *desiredURL; // @synthesize desiredURL=_desiredURL;
@property(retain, nonatomic) id <SCWebBrowsingContentFetcherProtocol> contentFetcher; // @synthesize contentFetcher=_contentFetcher;
@property(retain, nonatomic) id <SCWebBrowsingURLChecker> safeBrowsingChecker; // @synthesize safeBrowsingChecker=_safeBrowsingChecker;
@property(retain, nonatomic) id <SCWebBrowsingURLInterceptor> urlInterceptor; // @synthesize urlInterceptor=_urlInterceptor;
@property(nonatomic) __weak id <SCWebBrowserDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak SCWebBrowsingScriptScrolling *scrollingScript; // @synthesize scrollingScript=_scrollingScript;
@property(nonatomic) __weak SCWebBrowsingScriptPerformanceMetrics *performanceMetricsScript; // @synthesize performanceMetricsScript=_performanceMetricsScript;
@property(retain, nonatomic) SCWebBrowsingJavaScriptBridge *jsBridge; // @synthesize jsBridge=_jsBridge;
@property(readonly, nonatomic) SCWebBrowserConfig *config; // @synthesize config=_config;
@property(readonly, nonatomic) SCWebBrowserV11Revision2Header *header; // @synthesize header=_header;
@property(retain, nonatomic) SCSafeBrowsingWarningView *safeBrowsingWarningView; // @synthesize safeBrowsingWarningView=_safeBrowsingWarningView;
@property(nonatomic) _Bool userCanPullToDismiss; // @synthesize userCanPullToDismiss=_userCanPullToDismiss;
- (void).cxx_destruct;
- (void)cardTransitionEndedWithView:(id)arg1 transitionType:(unsigned long long)arg2;
- (void)cardTransitionDidUpdateProgress:(double)arg1;
- (void)cardTransitionWillBeginWithView:(id)arg1;
- (id)cardToExpandTransition;
- (_Bool)cardTransitionShouldBeginWithView:(id)arg1;
- (void)moreButtonTapped;
- (void)dismissButtonTapped;
- (void)webBrowsingURLInterceptorDidClickCancel:(id)arg1;
- (void)webBrowsingURLInterceptorDidClickOk:(id)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)_safeBrowsingFailedWithDecisionHandler:(CDUnknownBlockType)arg1;
- (void)_safeBrowsingSucceededWithURLType:(long long)arg1 decisionHandler:(CDUnknownBlockType)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webViewDidClose:(id)arg1;
- (void)learnMoreFromSafeBrowsing;
- (void)goBackFromSafeBrowsing;
- (void)actionSheetDidDismiss:(id)arg1;
- (void)_handleNavigationError:(id)arg1;
- (void)_navigationFailed;
- (void)_connectionErrorExitPressed:(id)arg1;
- (void)_connectionErrorIgnorePressed:(id)arg1;
- (void)_connectionErrorRetryPressed:(id)arg1;
- (void)_showConnectionError;
@property(readonly, nonatomic, getter=_webview) WKWebView *webview; // @synthesize webview=_webview;
- (void)_showShareActivity;
- (void)moreButtonPressed:(id)arg1;
- (void)_cancelCellPressed:(id)arg1;
- (void)_browserCellPressed:(id)arg1;
- (void)_shareCellPressed:(id)arg1;
- (void)toolbarShareButtonPressed;
- (void)toolbarSendButtonPressed;
- (void)toolbarForwardButtonPressed;
- (void)toolbarBackButtonPressed;
- (_Bool)canGoForward;
- (_Bool)canGoBack;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(readonly, nonatomic) double estimatedProgress;
- (void)_updateVisibleQueueStatus;
- (void)reset;
- (void)_updateProgress;
- (void)_showUnsafeURLViewForType:(long long)arg1;
- (void)_loadPrefetchedData:(id)arg1 forURL:(id)arg2;
- (void)_endBrowserSessionAndDismiss:(_Bool)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadURL:(id)arg1;
- (void)loadPrefetchHints:(id)arg1 baseURL:(id)arg2;
- (void)prefetchRootDocumentAtURL:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (id)initWithConfig:(id)arg1 delegate:(id)arg2 safeBrowsingChecker:(id)arg3 urlInterceptor:(id)arg4 contentDelivery:(id)arg5 expectedInitialURL:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

