//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSString.h>

#import "IGListDiffable-Protocol.h"
#import "SCQueryExprSupport-Protocol.h"
#import "SCTCognacUser-Protocol.h"
#import "SIGSortableEntity-Protocol.h"
#import "SIGTextFieldPill-Protocol.h"

@interface NSString (StdString) <SCQueryExprSupport, SIGSortableEntity, SIGTextFieldPill, IGListDiffable, SCTCognacUser>
+ (id)stringForStdString:(const basic_string_90719d97 *)arg1;
+ (basic_string_90719d97)stdStringForString:(id)arg1;
+ (id)sc_stringWithFormat:(id)arg1;
+ (id)sc_stringWithFormat:(id)arg1 arguments:(char **)arg2;
+ (_Bool)captionContentValidation:(id)arg1;
+ (id)numberFromString:(id)arg1;
+ (id)stringWithBool:(_Bool)arg1;
+ (id)processForDisplay:(id)arg1;
+ (id)attibutesFromFont:(id)arg1 lineBreakMode:(long long)arg2 alignment:(long long)arg3;
+ (id)attibutesFromFont:(id)arg1 lineBreakMode:(long long)arg2;
+ (id)sizeCache;
+ (id)hexToData:(id)arg1;
+ (id)generateRandomStringOfLength:(long long)arg1;
+ (struct CGSize)text:(id)arg1 sizeWithFont:(id)arg2 constrainedToSize:(struct CGSize)arg3;
+ (long long)maxFontSizeInWidthForText:(id)arg1 fontName:(id)arg2 withMinFontSize:(long long)arg3 withMaxFontSize:(long long)arg4 maxWidth:(double)arg5;
+ (double)widthSingleLineText:(id)arg1 forFont:(id)arg2;
+ (id)getEmailDomain:(id)arg1;
+ (id)stringByRemovingEmojis:(id)arg1;
+ (id)stringByRemovingPrefixEmojis:(id)arg1;
+ (_Bool)isEmojiCharacter:(id)arg1;
+ (long long)typeForCodePoint:(unsigned long long)arg1;
+ (_Bool)isEmojiJoiner:(unsigned long long)arg1;
+ (_Bool)isEmojiVariationSelector:(unsigned long long)arg1;
+ (_Bool)isEmojiCodePoint:(unsigned long long)arg1;
+ (id)codePointForText:(id)arg1 atIndex:(unsigned long long)arg2 length:(long long *)arg3;
+ (id)codePointForText:(id)arg1 atIndex:(unsigned long long)arg2;
+ (_Bool)isValidEmail:(id)arg1;
+ (id)longDateFromDate:(id)arg1;
+ (id)mediumDateFromDate:(id)arg1;
+ (id)timeFromDate:(id)arg1;
+ (id)formatRelativeDate:(id)arg1 localizedTodayString:(id)arg2;
+ (id)formatRelativeDate:(id)arg1 localizedTodayString:(id)arg2 offsetByHours:(long long)arg3;
+ (id)formatTimeInterval:(double)arg1 showAbbrNow:(_Bool)arg2 capitalize:(_Bool)arg3 justNowThreshold:(double)arg4 roundingToClosest:(_Bool)arg5;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2 maxHours:(unsigned long long)arg3 showAbbrNow:(_Bool)arg4 capitalize:(_Bool)arg5 justNowThreshold:(double)arg6 useYesterdayText:(_Bool)arg7 useSimplified:(_Bool)arg8;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2 maxHours:(unsigned long long)arg3 showAbbrNow:(_Bool)arg4 capitalize:(_Bool)arg5 justNowThreshold:(double)arg6;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2 maxHours:(unsigned long long)arg3 showAbbrNow:(_Bool)arg4 capitalize:(_Bool)arg5;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2 maxHours:(unsigned long long)arg3 showAbbrNow:(_Bool)arg4;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2 maxHours:(unsigned long long)arg3;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2 capitalize:(_Bool)arg3;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2;
+ (id)formatDate:(id)arg1 referenceDate:(id)arg2 maxHours:(unsigned long long)arg3 capitalize:(_Bool)arg4;
+ (id)formatDate:(id)arg1 referenceDate:(id)arg2;
+ (id)formatNumber:(id)arg1;
+ (id)urlDecodeString:(id)arg1;
+ (id)urlEncodeString:(id)arg1;
+ (id)cleanPunctuationLowercase:(id)arg1;
+ (_Bool)isNotBlank:(id)arg1;
+ (_Bool)isBlank:(id)arg1;
+ (_Bool)isNilOrEmpty:(id)arg1;
+ (id)nilToEmpty:(id)arg1;
+ (id)punctuationCharacters;
+ (id)SHA256HexString:(id)arg1;
+ (id)UUIDV3StringFromSeed:(id)arg1;
+ (id)sc_topPathComponent:(id)arg1;
+ (id)grpc_stringFromMetadataValue:(struct grpc_metadata *)arg1;
@property(readonly, nonatomic) basic_string_90719d97 stdString;
- (id)mgl_titleCasedStringWithLocale:(id)arg1;
- (id)mgl_stringOrNilIfEmpty;
- (struct _NSRange)mgl_wholeRange;
- (id)sp_md5;
- (id)substringWithByteOffset:(long long)arg1 sizeInBytes:(long long)arg2 encoding:(unsigned long long)arg3;
- (id)splitByWhiteSpaceAndRemoveEmptyOnes;
- (id)sc_stringByReplacingRegex:(id)arg1 withString:(id)arg2;
- (double)scoreAgainst:(id)arg1 fuzziness:(id)arg2 options:(long long)arg3;
- (double)scoreAgainst:(id)arg1 fuzziness:(id)arg2;
- (double)scoreAgainst:(id)arg1;
- (id)encodedUUIDString;
- (void)FC_encodeWithCoder:(id)arg1;
- (id)jsonDecoded;
- (id)sc_decodeBase64String:(id)arg1;
- (id)sc_encodeToBase64String:(id)arg1;
- (id)sc_localizedFirstLetterCapitalizedString;
- (id)sc_localizedSentenceCapitalizedString;
- (_Bool)isValidUrlFormat;
- (id)sc_lowercaseString;
- (id)stringByTrimmingLeadingWhitespace;
- (id)stringByTrimmingLeadingAndTrailingWhitespaces;
- (_Bool)sc_hasPrefix:(id)arg1 options:(unsigned long long)arg2;
- (id)substringToIndexByCharacterSequence:(unsigned long long)arg1;
- (long long)lengthOfCharacterSequences;
- (struct CGSize)sizeWithAttributes:(id)arg1 constrainedToSize:(struct CGSize)arg2;
- (struct CGSize)sizeWithFont:(id)arg1 constrainedToSize:(struct CGSize)arg2 lineBreakMode:(long long)arg3;
- (struct CGSize)sizeWithFont:(id)arg1 constrainedToSize:(struct CGSize)arg2;
- (struct CGSize)sizeWithFont:(id)arg1;
- (id)sc_reversedString;
- (unsigned long long)levenshtinDistanceWithString:(id)arg1;
- (_Bool)containsOnlyEmojis;
- (_Bool)doesMatchRegStringExp:(id)arg1;
- (_Bool)matches:(id)arg1;
- (_Bool)compare:(id)arg1 withExpr:(int)arg2;
- (void)bindQueryStatement:(struct sqlite3_stmt *)arg1 atPosition:(int)arg2;
- (id)MD5HexString;
- (id)baseAvatarId;
- (id)sig_attributedStringWithStyle:(unsigned long long)arg1 alignment:(long long)arg2;
- (id)sig_attributedStringWithStyle:(unsigned long long)arg1 alignment:(long long)arg2 lineBreakMode:(long long)arg3;
- (id)sig_attributedStringWithStyle:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *sig_sortingKey;
@property(readonly, nonatomic) NSString *pillText;
- (void)grpc_initMetadata:(struct grpc_metadata *)arg1;
- (_Bool)isEqualToDiffableObject:(id)arg1;
- (id)diffIdentifier;
- (id)sanitizedString;
- (id)sortingKey;
- (id)stringByRemovingCharactersInSet:(id)arg1;
- (id)userId;
- (id)username;
- (id)remoteFilenameForSpectaclesFileType:(unsigned long long)arg1;

// Remaining properties
@property(readonly, nonatomic) id associatedValue;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSString *sig_predefinedGroupType;
@property(readonly) Class superclass;
@end

